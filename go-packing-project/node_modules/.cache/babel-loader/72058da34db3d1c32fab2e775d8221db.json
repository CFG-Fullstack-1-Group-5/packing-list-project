{"ast":null,"code":"import { createFocusManager as $cIPI0$createFocusManager, getFocusableTreeWalker as $cIPI0$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { useId as $cIPI0$useId, useDescription as $cIPI0$useDescription, filterDOMProps as $cIPI0$filterDOMProps, mergeProps as $cIPI0$mergeProps, isMac as $cIPI0$isMac, scrollIntoView as $cIPI0$scrollIntoView, getScrollParent as $cIPI0$getScrollParent, useEvent as $cIPI0$useEvent, useLayoutEffect as $cIPI0$useLayoutEffect, isIOS as $cIPI0$isIOS, useLabels as $cIPI0$useLabels } from \"@react-aria/utils\";\nimport $cIPI0$react, { useMemo as $cIPI0$useMemo, useRef as $cIPI0$useRef, useEffect as $cIPI0$useEffect } from \"react\";\nimport { useField as $cIPI0$useField } from \"@react-aria/label\";\nimport { useMessageFormatter as $cIPI0$useMessageFormatter, useLocale as $cIPI0$useLocale, useDateFormatter as $cIPI0$useDateFormatter, useFilter as $cIPI0$useFilter } from \"@react-aria/i18n\";\nimport { useFocusWithin as $cIPI0$useFocusWithin, usePress as $cIPI0$usePress } from \"@react-aria/interactions\";\nimport { toCalendar as $cIPI0$toCalendar, CalendarDate as $cIPI0$CalendarDate } from \"@internationalized/date\";\nimport { NumberParser as $cIPI0$NumberParser } from \"@internationalized/number\";\nimport { useSpinButton as $cIPI0$useSpinButton } from \"@react-aria/spinbutton\";\nimport { MessageDictionary as $cIPI0$MessageDictionary } from \"@internationalized/message\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $204383cf4f6b0d06$exports = {};\nvar $f23889fffbde9058$exports = {};\n$f23889fffbde9058$exports = JSON.parse(\"{\\\"calendar\\\":\\\"التقويم\\\",\\\"day\\\":\\\"يوم\\\",\\\"dayPeriod\\\":\\\"ص/م\\\",\\\"endDate\\\":\\\"تاريخ الانتهاء\\\",\\\"era\\\":\\\"العصر\\\",\\\"hour\\\":\\\"الساعات\\\",\\\"minute\\\":\\\"الدقائق\\\",\\\"month\\\":\\\"الشهر\\\",\\\"second\\\":\\\"الثواني\\\",\\\"selectedDateDescription\\\":\\\"تاريخ محدد: {date}\\\",\\\"selectedRangeDescription\\\":\\\"المدى الزمني المحدد: {startDate} إلى {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"الوقت المحدد: {time}\\\",\\\"startDate\\\":\\\"تاريخ البدء\\\",\\\"timeZoneName\\\":\\\"التوقيت\\\",\\\"weekday\\\":\\\"اليوم\\\",\\\"year\\\":\\\"السنة\\\"}\");\nvar $09d9badaa8903929$exports = {};\n$09d9badaa8903929$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Календар\\\",\\\"day\\\":\\\"ден\\\",\\\"dayPeriod\\\":\\\"пр.об./сл.об.\\\",\\\"endDate\\\":\\\"Крайна дата\\\",\\\"era\\\":\\\"ера\\\",\\\"hour\\\":\\\"час\\\",\\\"minute\\\":\\\"минута\\\",\\\"month\\\":\\\"месец\\\",\\\"second\\\":\\\"секунда\\\",\\\"selectedDateDescription\\\":\\\"Избрана дата: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Избран диапазон: {startDate} до {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Избрано време: {time}\\\",\\\"startDate\\\":\\\"Начална дата\\\",\\\"timeZoneName\\\":\\\"часова зона\\\",\\\"weekday\\\":\\\"ден от седмицата\\\",\\\"year\\\":\\\"година\\\"}\");\nvar $151b77e0fd711730$exports = {};\n$151b77e0fd711730$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendář\\\",\\\"day\\\":\\\"den\\\",\\\"dayPeriod\\\":\\\"část dne\\\",\\\"endDate\\\":\\\"Konečné datum\\\",\\\"era\\\":\\\"letopočet\\\",\\\"hour\\\":\\\"hodina\\\",\\\"minute\\\":\\\"minuta\\\",\\\"month\\\":\\\"měsíc\\\",\\\"second\\\":\\\"sekunda\\\",\\\"selectedDateDescription\\\":\\\"Vybrané datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Vybrané období: {startDate} až {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Vybraný čas: {time}\\\",\\\"startDate\\\":\\\"Počáteční datum\\\",\\\"timeZoneName\\\":\\\"časové pásmo\\\",\\\"weekday\\\":\\\"den v týdnu\\\",\\\"year\\\":\\\"rok\\\"}\");\nvar $61915aa8630b90a2$exports = {};\n$61915aa8630b90a2$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"dag\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Slutdato\\\",\\\"era\\\":\\\"æra\\\",\\\"hour\\\":\\\"time\\\",\\\"minute\\\":\\\"minut\\\",\\\"month\\\":\\\"måned\\\",\\\"second\\\":\\\"sekund\\\",\\\"selectedDateDescription\\\":\\\"Valgt dato: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Valgt interval: {startDate} til {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Valgt tidspunkt: {time}\\\",\\\"startDate\\\":\\\"Startdato\\\",\\\"timeZoneName\\\":\\\"tidszone\\\",\\\"weekday\\\":\\\"ugedag\\\",\\\"year\\\":\\\"år\\\"}\");\nvar $35cea00159787840$exports = {};\n$35cea00159787840$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"Tag\\\",\\\"dayPeriod\\\":\\\"Tageshälfte\\\",\\\"endDate\\\":\\\"Enddatum\\\",\\\"era\\\":\\\"Epoche\\\",\\\"hour\\\":\\\"Stunde\\\",\\\"minute\\\":\\\"Minute\\\",\\\"month\\\":\\\"Monat\\\",\\\"second\\\":\\\"Sekunde\\\",\\\"selectedDateDescription\\\":\\\"Ausgewähltes Datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Ausgewählter Bereich: {startDate} bis {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Ausgewählte Zeit: {time}\\\",\\\"startDate\\\":\\\"Anfangsdatum\\\",\\\"timeZoneName\\\":\\\"Zeitzone\\\",\\\"weekday\\\":\\\"Wochentag\\\",\\\"year\\\":\\\"Jahr\\\"}\");\nvar $518b4e82b9eacafd$exports = {};\n$518b4e82b9eacafd$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Ημερολόγιο\\\",\\\"day\\\":\\\"ημέρα\\\",\\\"dayPeriod\\\":\\\"π.μ./μ.μ.\\\",\\\"endDate\\\":\\\"Ημερομηνία λήξης\\\",\\\"era\\\":\\\"περίοδος\\\",\\\"hour\\\":\\\"ώρα\\\",\\\"minute\\\":\\\"λεπτό\\\",\\\"month\\\":\\\"μήνας\\\",\\\"second\\\":\\\"δευτερόλεπτο\\\",\\\"selectedDateDescription\\\":\\\"Επιλεγμένη ημερομηνία: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Επιλεγμένο εύρος: {startDate} έως {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Επιλεγμένη ώρα: {time}\\\",\\\"startDate\\\":\\\"Ημερομηνία έναρξης\\\",\\\"timeZoneName\\\":\\\"ζώνη ώρας\\\",\\\"weekday\\\":\\\"καθημερινή\\\",\\\"year\\\":\\\"έτος\\\"}\");\nvar $1c2b297f7e2cf474$exports = {};\n$1c2b297f7e2cf474$exports = JSON.parse(\"{\\\"era\\\":\\\"era\\\",\\\"year\\\":\\\"year\\\",\\\"month\\\":\\\"month\\\",\\\"day\\\":\\\"day\\\",\\\"hour\\\":\\\"hour\\\",\\\"minute\\\":\\\"minute\\\",\\\"second\\\":\\\"second\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"calendar\\\":\\\"Calendar\\\",\\\"startDate\\\":\\\"Start Date\\\",\\\"endDate\\\":\\\"End Date\\\",\\\"weekday\\\":\\\"day of the week\\\",\\\"timeZoneName\\\":\\\"time zone\\\",\\\"selectedDateDescription\\\":\\\"Selected Date: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Selected Range: {startDate} to {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Selected Time: {time}\\\"}\");\nvar $07f628a707cf9b18$exports = {};\n$07f628a707cf9b18$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendario\\\",\\\"day\\\":\\\"día\\\",\\\"dayPeriod\\\":\\\"a. m./p. m.\\\",\\\"endDate\\\":\\\"Fecha final\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"hora\\\",\\\"minute\\\":\\\"minuto\\\",\\\"month\\\":\\\"mes\\\",\\\"second\\\":\\\"segundo\\\",\\\"selectedDateDescription\\\":\\\"Fecha seleccionada: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Rango seleccionado: {startDate} a {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Hora seleccionada: {time}\\\",\\\"startDate\\\":\\\"Fecha de inicio\\\",\\\"timeZoneName\\\":\\\"zona horaria\\\",\\\"weekday\\\":\\\"día de la semana\\\",\\\"year\\\":\\\"año\\\"}\");\nvar $db553ffe17c7f4db$exports = {};\n$db553ffe17c7f4db$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"päev\\\",\\\"dayPeriod\\\":\\\"enne/pärast lõunat\\\",\\\"endDate\\\":\\\"Lõppkuupäev\\\",\\\"era\\\":\\\"ajastu\\\",\\\"hour\\\":\\\"tund\\\",\\\"minute\\\":\\\"minut\\\",\\\"month\\\":\\\"kuu\\\",\\\"second\\\":\\\"sekund\\\",\\\"selectedDateDescription\\\":\\\"Valitud kuupäev: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Valitud vahemik: {startDate} kuni {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Valitud aeg: {time}\\\",\\\"startDate\\\":\\\"Alguskuupäev\\\",\\\"timeZoneName\\\":\\\"ajavöönd\\\",\\\"weekday\\\":\\\"nädalapäev\\\",\\\"year\\\":\\\"aasta\\\"}\");\nvar $4afcfe00cd703f83$exports = {};\n$4afcfe00cd703f83$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalenteri\\\",\\\"day\\\":\\\"päivä\\\",\\\"dayPeriod\\\":\\\"vuorokaudenaika\\\",\\\"endDate\\\":\\\"Päättymispäivä\\\",\\\"era\\\":\\\"aikakausi\\\",\\\"hour\\\":\\\"tunti\\\",\\\"minute\\\":\\\"minuutti\\\",\\\"month\\\":\\\"kuukausi\\\",\\\"second\\\":\\\"sekunti\\\",\\\"selectedDateDescription\\\":\\\"Valittu päivämäärä: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Valittu aikaväli: {startDate} – {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Valittu aika: {time}\\\",\\\"startDate\\\":\\\"Alkamispäivä\\\",\\\"timeZoneName\\\":\\\"aikavyöhyke\\\",\\\"weekday\\\":\\\"viikonpäivä\\\",\\\"year\\\":\\\"vuosi\\\"}\");\nvar $1d2645d18d4c5be0$exports = {};\n$1d2645d18d4c5be0$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendrier\\\",\\\"day\\\":\\\"jour\\\",\\\"dayPeriod\\\":\\\"cadran\\\",\\\"endDate\\\":\\\"Date de fin\\\",\\\"era\\\":\\\"ère\\\",\\\"hour\\\":\\\"heure\\\",\\\"minute\\\":\\\"minute\\\",\\\"month\\\":\\\"mois\\\",\\\"second\\\":\\\"seconde\\\",\\\"selectedDateDescription\\\":\\\"Date sélectionnée : {date}\\\",\\\"selectedRangeDescription\\\":\\\"Plage sélectionnée : {startDate} au {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Heure choisie : {time}\\\",\\\"startDate\\\":\\\"Date de début\\\",\\\"timeZoneName\\\":\\\"fuseau horaire\\\",\\\"weekday\\\":\\\"jour de la semaine\\\",\\\"year\\\":\\\"année\\\"}\");\nvar $64cb6a9be1f6fa48$exports = {};\n$64cb6a9be1f6fa48$exports = JSON.parse(\"{\\\"calendar\\\":\\\"לוח שנה\\\",\\\"day\\\":\\\"יום\\\",\\\"dayPeriod\\\":\\\"לפנה״צ/אחה״צ\\\",\\\"endDate\\\":\\\"תאריך סיום\\\",\\\"era\\\":\\\"תקופה\\\",\\\"hour\\\":\\\"שעה\\\",\\\"minute\\\":\\\"דקה\\\",\\\"month\\\":\\\"חודש\\\",\\\"second\\\":\\\"שנייה\\\",\\\"selectedDateDescription\\\":\\\"תאריך נבחר: {date}\\\",\\\"selectedRangeDescription\\\":\\\"טווח נבחר: {startDate} עד {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"זמן נבחר: {time}\\\",\\\"startDate\\\":\\\"תאריך התחלה\\\",\\\"timeZoneName\\\":\\\"אזור זמן\\\",\\\"weekday\\\":\\\"יום בשבוע\\\",\\\"year\\\":\\\"שנה\\\"}\");\nvar $2a1ef2e8050be27a$exports = {};\n$2a1ef2e8050be27a$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendar\\\",\\\"day\\\":\\\"dan\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Datum završetka\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"sat\\\",\\\"minute\\\":\\\"minuta\\\",\\\"month\\\":\\\"mjesec\\\",\\\"second\\\":\\\"sekunda\\\",\\\"selectedDateDescription\\\":\\\"Odabrani datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Odabrani raspon: {startDate} do {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Odabrano vrijeme: {time}\\\",\\\"startDate\\\":\\\"Datum početka\\\",\\\"timeZoneName\\\":\\\"vremenska zona\\\",\\\"weekday\\\":\\\"dan u tjednu\\\",\\\"year\\\":\\\"godina\\\"}\");\nvar $ad429dca102acd0e$exports = {};\n$ad429dca102acd0e$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Naptár\\\",\\\"day\\\":\\\"nap\\\",\\\"dayPeriod\\\":\\\"napszak\\\",\\\"endDate\\\":\\\"Befejező dátum\\\",\\\"era\\\":\\\"éra\\\",\\\"hour\\\":\\\"óra\\\",\\\"minute\\\":\\\"perc\\\",\\\"month\\\":\\\"hónap\\\",\\\"second\\\":\\\"másodperc\\\",\\\"selectedDateDescription\\\":\\\"Kijelölt dátum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Kijelölt tartomány: {startDate}–{endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Kijelölt idő: {time}\\\",\\\"startDate\\\":\\\"Kezdő dátum\\\",\\\"timeZoneName\\\":\\\"időzóna\\\",\\\"weekday\\\":\\\"hét napja\\\",\\\"year\\\":\\\"év\\\"}\");\nvar $6e68cb5d1cb97bd2$exports = {};\n$6e68cb5d1cb97bd2$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendario\\\",\\\"day\\\":\\\"giorno\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Data finale\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"ora\\\",\\\"minute\\\":\\\"minuto\\\",\\\"month\\\":\\\"mese\\\",\\\"second\\\":\\\"secondo\\\",\\\"selectedDateDescription\\\":\\\"Data selezionata: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Intervallo selezionato: da {startDate} a {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Ora selezionata: {time}\\\",\\\"startDate\\\":\\\"Data iniziale\\\",\\\"timeZoneName\\\":\\\"fuso orario\\\",\\\"weekday\\\":\\\"giorno della settimana\\\",\\\"year\\\":\\\"anno\\\"}\");\nvar $a82ee9af063ee069$exports = {};\n$a82ee9af063ee069$exports = JSON.parse(\"{\\\"calendar\\\":\\\"カレンダー\\\",\\\"day\\\":\\\"日\\\",\\\"dayPeriod\\\":\\\"午前/午後\\\",\\\"endDate\\\":\\\"終了日\\\",\\\"era\\\":\\\"時代\\\",\\\"hour\\\":\\\"時\\\",\\\"minute\\\":\\\"分\\\",\\\"month\\\":\\\"月\\\",\\\"second\\\":\\\"秒\\\",\\\"selectedDateDescription\\\":\\\"選択した日付 : {date}\\\",\\\"selectedRangeDescription\\\":\\\"選択範囲 : {startDate} から {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"選択した時間 : {time}\\\",\\\"startDate\\\":\\\"開始日\\\",\\\"timeZoneName\\\":\\\"タイムゾーン\\\",\\\"weekday\\\":\\\"曜日\\\",\\\"year\\\":\\\"年\\\"}\");\nvar $67e9091dbf37d4eb$exports = {};\n$67e9091dbf37d4eb$exports = JSON.parse(\"{\\\"calendar\\\":\\\"달력\\\",\\\"day\\\":\\\"일\\\",\\\"dayPeriod\\\":\\\"오전/오후\\\",\\\"endDate\\\":\\\"종료 날짜\\\",\\\"era\\\":\\\"연호\\\",\\\"hour\\\":\\\"시\\\",\\\"minute\\\":\\\"분\\\",\\\"month\\\":\\\"월\\\",\\\"second\\\":\\\"초\\\",\\\"selectedDateDescription\\\":\\\"선택 일자: {date}\\\",\\\"selectedRangeDescription\\\":\\\"선택 범위: {startDate} ~ {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"선택 시간: {time}\\\",\\\"startDate\\\":\\\"시작 날짜\\\",\\\"timeZoneName\\\":\\\"시간대\\\",\\\"weekday\\\":\\\"요일\\\",\\\"year\\\":\\\"년\\\"}\");\nvar $75834f9729f653d1$exports = {};\n$75834f9729f653d1$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendorius\\\",\\\"day\\\":\\\"diena\\\",\\\"dayPeriod\\\":\\\"iki pietų / po pietų\\\",\\\"endDate\\\":\\\"Pabaigos data\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"valanda\\\",\\\"minute\\\":\\\"minutė\\\",\\\"month\\\":\\\"mėnuo\\\",\\\"second\\\":\\\"sekundė\\\",\\\"selectedDateDescription\\\":\\\"Pasirinkta data: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Pasirinktas intervalas: nuo {startDate} iki {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Pasirinktas laikas: {time}\\\",\\\"startDate\\\":\\\"Pradžios data\\\",\\\"timeZoneName\\\":\\\"laiko juosta\\\",\\\"weekday\\\":\\\"savaitės diena\\\",\\\"year\\\":\\\"metai\\\"}\");\nvar $a2df2c2520b4a7f0$exports = {};\n$a2df2c2520b4a7f0$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendārs\\\",\\\"day\\\":\\\"diena\\\",\\\"dayPeriod\\\":\\\"priekšpusdienā/pēcpusdienā\\\",\\\"endDate\\\":\\\"Beigu datums\\\",\\\"era\\\":\\\"ēra\\\",\\\"hour\\\":\\\"stundas\\\",\\\"minute\\\":\\\"minūtes\\\",\\\"month\\\":\\\"mēnesis\\\",\\\"second\\\":\\\"sekundes\\\",\\\"selectedDateDescription\\\":\\\"Atlasītais datums: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Atlasītais diapazons: no {startDate} līdz {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Atlasītais laiks: {time}\\\",\\\"startDate\\\":\\\"Sākuma datums\\\",\\\"timeZoneName\\\":\\\"laika josla\\\",\\\"weekday\\\":\\\"nedēļas diena\\\",\\\"year\\\":\\\"gads\\\"}\");\nvar $aedcd71db4933ed5$exports = {};\n$aedcd71db4933ed5$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"dag\\\",\\\"dayPeriod\\\":\\\"a.m./p.m.\\\",\\\"endDate\\\":\\\"Sluttdato\\\",\\\"era\\\":\\\"tidsalder\\\",\\\"hour\\\":\\\"time\\\",\\\"minute\\\":\\\"minutt\\\",\\\"month\\\":\\\"måned\\\",\\\"second\\\":\\\"sekund\\\",\\\"selectedDateDescription\\\":\\\"Valgt dato: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Valgt område: {startDate} til {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Valgt tid: {time}\\\",\\\"startDate\\\":\\\"Startdato\\\",\\\"timeZoneName\\\":\\\"tidssone\\\",\\\"weekday\\\":\\\"ukedag\\\",\\\"year\\\":\\\"år\\\"}\");\nvar $3b2df9e54353046c$exports = {};\n$3b2df9e54353046c$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"dag\\\",\\\"dayPeriod\\\":\\\"a.m./p.m.\\\",\\\"endDate\\\":\\\"Einddatum\\\",\\\"era\\\":\\\"tijdperk\\\",\\\"hour\\\":\\\"uur\\\",\\\"minute\\\":\\\"minuut\\\",\\\"month\\\":\\\"maand\\\",\\\"second\\\":\\\"seconde\\\",\\\"selectedDateDescription\\\":\\\"Geselecteerde datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Geselecteerd bereik: {startDate} tot {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Geselecteerde tijd: {time}\\\",\\\"startDate\\\":\\\"Startdatum\\\",\\\"timeZoneName\\\":\\\"tijdzone\\\",\\\"weekday\\\":\\\"dag van de week\\\",\\\"year\\\":\\\"jaar\\\"}\");\nvar $c03fe977fcfafe93$exports = {};\n$c03fe977fcfafe93$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendarz\\\",\\\"day\\\":\\\"dzień\\\",\\\"dayPeriod\\\":\\\"rano / po południu / wieczorem\\\",\\\"endDate\\\":\\\"Data końcowa\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"godzina\\\",\\\"minute\\\":\\\"minuta\\\",\\\"month\\\":\\\"miesiąc\\\",\\\"second\\\":\\\"sekunda\\\",\\\"selectedDateDescription\\\":\\\"Wybrana data: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Wybrany zakres: {startDate} do {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Wybrany czas: {time}\\\",\\\"startDate\\\":\\\"Data początkowa\\\",\\\"timeZoneName\\\":\\\"strefa czasowa\\\",\\\"weekday\\\":\\\"dzień tygodnia\\\",\\\"year\\\":\\\"rok\\\"}\");\nvar $569f006fc292345f$exports = {};\n$569f006fc292345f$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendário\\\",\\\"day\\\":\\\"dia\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Data final\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"hora\\\",\\\"minute\\\":\\\"minuto\\\",\\\"month\\\":\\\"mês\\\",\\\"second\\\":\\\"segundo\\\",\\\"selectedDateDescription\\\":\\\"Data selecionada: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Intervalo selecionado: {startDate} a {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Hora selecionada: {time}\\\",\\\"startDate\\\":\\\"Data inicial\\\",\\\"timeZoneName\\\":\\\"fuso horário\\\",\\\"weekday\\\":\\\"dia da semana\\\",\\\"year\\\":\\\"ano\\\"}\");\nvar $7c2494e14452f2dd$exports = {};\n$7c2494e14452f2dd$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendário\\\",\\\"day\\\":\\\"dia\\\",\\\"dayPeriod\\\":\\\"am/pm\\\",\\\"endDate\\\":\\\"Data de Término\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"hora\\\",\\\"minute\\\":\\\"minuto\\\",\\\"month\\\":\\\"mês\\\",\\\"second\\\":\\\"segundo\\\",\\\"selectedDateDescription\\\":\\\"Data selecionada: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Intervalo selecionado: {startDate} a {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Hora selecionada: {time}\\\",\\\"startDate\\\":\\\"Data de Início\\\",\\\"timeZoneName\\\":\\\"fuso horário\\\",\\\"weekday\\\":\\\"dia da semana\\\",\\\"year\\\":\\\"ano\\\"}\");\nvar $eb82ef981b5592bf$exports = {};\n$eb82ef981b5592bf$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Calendar\\\",\\\"day\\\":\\\"zi\\\",\\\"dayPeriod\\\":\\\"a.m/p.m.\\\",\\\"endDate\\\":\\\"Dată final\\\",\\\"era\\\":\\\"eră\\\",\\\"hour\\\":\\\"oră\\\",\\\"minute\\\":\\\"minut\\\",\\\"month\\\":\\\"lună\\\",\\\"second\\\":\\\"secundă\\\",\\\"selectedDateDescription\\\":\\\"Dată selectată: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Interval selectat: de la {startDate} până la {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Ora selectată: {time}\\\",\\\"startDate\\\":\\\"Dată început\\\",\\\"timeZoneName\\\":\\\"fus orar\\\",\\\"weekday\\\":\\\"ziua din săptămână\\\",\\\"year\\\":\\\"an\\\"}\");\nvar $6efa0e119f396950$exports = {};\n$6efa0e119f396950$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Календарь\\\",\\\"day\\\":\\\"день\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Дата окончания\\\",\\\"era\\\":\\\"эра\\\",\\\"hour\\\":\\\"час\\\",\\\"minute\\\":\\\"минута\\\",\\\"month\\\":\\\"месяц\\\",\\\"second\\\":\\\"секунда\\\",\\\"selectedDateDescription\\\":\\\"Выбранная дата: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Выбранный диапазон: с {startDate} по {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Выбранное время: {time}\\\",\\\"startDate\\\":\\\"Дата начала\\\",\\\"timeZoneName\\\":\\\"часовой пояс\\\",\\\"weekday\\\":\\\"день недели\\\",\\\"year\\\":\\\"год\\\"}\");\nvar $7f5e57085d7f5049$exports = {};\n$7f5e57085d7f5049$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendár\\\",\\\"day\\\":\\\"deň\\\",\\\"dayPeriod\\\":\\\"AM/PM\\\",\\\"endDate\\\":\\\"Dátum ukončenia\\\",\\\"era\\\":\\\"letopočet\\\",\\\"hour\\\":\\\"hodina\\\",\\\"minute\\\":\\\"minúta\\\",\\\"month\\\":\\\"mesiac\\\",\\\"second\\\":\\\"sekunda\\\",\\\"selectedDateDescription\\\":\\\"Vybratý dátum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Vybratý rozsah: od {startDate} do {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Vybratý čas: {time}\\\",\\\"startDate\\\":\\\"Dátum začatia\\\",\\\"timeZoneName\\\":\\\"časové pásmo\\\",\\\"weekday\\\":\\\"deň týždňa\\\",\\\"year\\\":\\\"rok\\\"}\");\nvar $578ee7c11dcdde7a$exports = {};\n$578ee7c11dcdde7a$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Koledar\\\",\\\"day\\\":\\\"dan\\\",\\\"dayPeriod\\\":\\\"dop/pop\\\",\\\"endDate\\\":\\\"Datum konca\\\",\\\"era\\\":\\\"doba\\\",\\\"hour\\\":\\\"ura\\\",\\\"minute\\\":\\\"minuta\\\",\\\"month\\\":\\\"mesec\\\",\\\"second\\\":\\\"sekunda\\\",\\\"selectedDateDescription\\\":\\\"Izbrani datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Izbrano območje: {startDate} do {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Izbrani čas: {time}\\\",\\\"startDate\\\":\\\"Datum začetka\\\",\\\"timeZoneName\\\":\\\"časovni pas\\\",\\\"weekday\\\":\\\"dan v tednu\\\",\\\"year\\\":\\\"leto\\\"}\");\nvar $bbc3fd6cd0bc9d50$exports = {};\n$bbc3fd6cd0bc9d50$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalendar\\\",\\\"day\\\":\\\"дан\\\",\\\"dayPeriod\\\":\\\"пре подне/по подне\\\",\\\"endDate\\\":\\\"Datum završetka\\\",\\\"era\\\":\\\"ера\\\",\\\"hour\\\":\\\"сат\\\",\\\"minute\\\":\\\"минут\\\",\\\"month\\\":\\\"месец\\\",\\\"second\\\":\\\"секунд\\\",\\\"selectedDateDescription\\\":\\\"Izabrani datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Izabrani opseg: od {startDate} do {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Izabrano vreme: {time}\\\",\\\"startDate\\\":\\\"Datum početka\\\",\\\"timeZoneName\\\":\\\"временска зона\\\",\\\"weekday\\\":\\\"дан у недељи\\\",\\\"year\\\":\\\"година\\\"}\");\nvar $0b04512118591d2a$exports = {};\n$0b04512118591d2a$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Kalender\\\",\\\"day\\\":\\\"dag\\\",\\\"dayPeriod\\\":\\\"fm/em\\\",\\\"endDate\\\":\\\"Slutdatum\\\",\\\"era\\\":\\\"era\\\",\\\"hour\\\":\\\"timme\\\",\\\"minute\\\":\\\"minut\\\",\\\"month\\\":\\\"månad\\\",\\\"second\\\":\\\"sekund\\\",\\\"selectedDateDescription\\\":\\\"Valt datum: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Valt intervall: {startDate} till {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Vald tid: {time}\\\",\\\"startDate\\\":\\\"Startdatum\\\",\\\"timeZoneName\\\":\\\"tidszon\\\",\\\"weekday\\\":\\\"veckodag\\\",\\\"year\\\":\\\"år\\\"}\");\nvar $3a49d121fe4c9e1d$exports = {};\n$3a49d121fe4c9e1d$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Takvim\\\",\\\"day\\\":\\\"gün\\\",\\\"dayPeriod\\\":\\\"ÖÖ/ÖS\\\",\\\"endDate\\\":\\\"Bitiş Tarihi\\\",\\\"era\\\":\\\"çağ\\\",\\\"hour\\\":\\\"saat\\\",\\\"minute\\\":\\\"dakika\\\",\\\"month\\\":\\\"ay\\\",\\\"second\\\":\\\"saniye\\\",\\\"selectedDateDescription\\\":\\\"Seçilen Tarih: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Seçilen Aralık: {startDate} - {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Seçilen Zaman: {time}\\\",\\\"startDate\\\":\\\"Başlangıç Tarihi\\\",\\\"timeZoneName\\\":\\\"saat dilimi\\\",\\\"weekday\\\":\\\"haftanın günü\\\",\\\"year\\\":\\\"yıl\\\"}\");\nvar $5ba21dbb8914919d$exports = {};\n$5ba21dbb8914919d$exports = JSON.parse(\"{\\\"calendar\\\":\\\"Календар\\\",\\\"day\\\":\\\"день\\\",\\\"dayPeriod\\\":\\\"дп/пп\\\",\\\"endDate\\\":\\\"Дата завершення\\\",\\\"era\\\":\\\"ера\\\",\\\"hour\\\":\\\"година\\\",\\\"minute\\\":\\\"хвилина\\\",\\\"month\\\":\\\"місяць\\\",\\\"second\\\":\\\"секунда\\\",\\\"selectedDateDescription\\\":\\\"Вибрана дата: {date}\\\",\\\"selectedRangeDescription\\\":\\\"Вибраний діапазон: {startDate} — {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"Вибраний час: {time}\\\",\\\"startDate\\\":\\\"Дата початку\\\",\\\"timeZoneName\\\":\\\"часовий пояс\\\",\\\"weekday\\\":\\\"день тижня\\\",\\\"year\\\":\\\"рік\\\"}\");\nvar $51078838e1b16cd7$exports = {};\n$51078838e1b16cd7$exports = JSON.parse(\"{\\\"calendar\\\":\\\"日历\\\",\\\"day\\\":\\\"日\\\",\\\"dayPeriod\\\":\\\"上午/下午\\\",\\\"endDate\\\":\\\"结束日期\\\",\\\"era\\\":\\\"纪元\\\",\\\"hour\\\":\\\"小时\\\",\\\"minute\\\":\\\"分钟\\\",\\\"month\\\":\\\"月\\\",\\\"second\\\":\\\"秒\\\",\\\"selectedDateDescription\\\":\\\"选定的日期：{date}\\\",\\\"selectedRangeDescription\\\":\\\"选定的范围：{startDate} 至 {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"选定的时间：{time}\\\",\\\"startDate\\\":\\\"开始日期\\\",\\\"timeZoneName\\\":\\\"时区\\\",\\\"weekday\\\":\\\"工作日\\\",\\\"year\\\":\\\"年\\\"}\");\nvar $33fab8219207655a$exports = {};\n$33fab8219207655a$exports = JSON.parse(\"{\\\"calendar\\\":\\\"日曆\\\",\\\"day\\\":\\\"日\\\",\\\"dayPeriod\\\":\\\"上午/下午\\\",\\\"endDate\\\":\\\"結束日期\\\",\\\"era\\\":\\\"纪元\\\",\\\"hour\\\":\\\"小时\\\",\\\"minute\\\":\\\"分钟\\\",\\\"month\\\":\\\"月\\\",\\\"second\\\":\\\"秒\\\",\\\"selectedDateDescription\\\":\\\"選定的日期：{date}\\\",\\\"selectedRangeDescription\\\":\\\"選定的範圍：{startDate} 至 {endDate}\\\",\\\"selectedTimeDescription\\\":\\\"選定的時間：{time}\\\",\\\"startDate\\\":\\\"開始日期\\\",\\\"timeZoneName\\\":\\\"时区\\\",\\\"weekday\\\":\\\"工作日\\\",\\\"year\\\":\\\"年\\\"}\");\n$204383cf4f6b0d06$exports = {\n  \"ar-AE\": $f23889fffbde9058$exports,\n  \"bg-BG\": $09d9badaa8903929$exports,\n  \"cs-CZ\": $151b77e0fd711730$exports,\n  \"da-DK\": $61915aa8630b90a2$exports,\n  \"de-DE\": $35cea00159787840$exports,\n  \"el-GR\": $518b4e82b9eacafd$exports,\n  \"en-US\": $1c2b297f7e2cf474$exports,\n  \"es-ES\": $07f628a707cf9b18$exports,\n  \"et-EE\": $db553ffe17c7f4db$exports,\n  \"fi-FI\": $4afcfe00cd703f83$exports,\n  \"fr-FR\": $1d2645d18d4c5be0$exports,\n  \"he-IL\": $64cb6a9be1f6fa48$exports,\n  \"hr-HR\": $2a1ef2e8050be27a$exports,\n  \"hu-HU\": $ad429dca102acd0e$exports,\n  \"it-IT\": $6e68cb5d1cb97bd2$exports,\n  \"ja-JP\": $a82ee9af063ee069$exports,\n  \"ko-KR\": $67e9091dbf37d4eb$exports,\n  \"lt-LT\": $75834f9729f653d1$exports,\n  \"lv-LV\": $a2df2c2520b4a7f0$exports,\n  \"nb-NO\": $aedcd71db4933ed5$exports,\n  \"nl-NL\": $3b2df9e54353046c$exports,\n  \"pl-PL\": $c03fe977fcfafe93$exports,\n  \"pt-BR\": $569f006fc292345f$exports,\n  \"pt-PT\": $7c2494e14452f2dd$exports,\n  \"ro-RO\": $eb82ef981b5592bf$exports,\n  \"ru-RU\": $6efa0e119f396950$exports,\n  \"sk-SK\": $7f5e57085d7f5049$exports,\n  \"sl-SI\": $578ee7c11dcdde7a$exports,\n  \"sr-SP\": $bbc3fd6cd0bc9d50$exports,\n  \"sv-SE\": $0b04512118591d2a$exports,\n  \"tr-TR\": $3a49d121fe4c9e1d$exports,\n  \"uk-UA\": $5ba21dbb8914919d$exports,\n  \"zh-CN\": $51078838e1b16cd7$exports,\n  \"zh-TW\": $33fab8219207655a$exports\n};\n\nfunction $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref1, disableArrowNavigation) {\n  let {\n    direction: direction\n  } = $cIPI0$useLocale();\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref1), [ref1]); // Open the popover on alt + arrow down\n\n  let onKeyDown = e => {\n    if (e.altKey && (e.key === 'ArrowDown' || e.key === 'ArrowUp') && 'setOpen' in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n\n    if (disableArrowNavigation) return;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') focusManager.focusNext();else focusManager.focusPrevious();\n        break;\n\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') focusManager.focusPrevious();else focusManager.focusNext();\n        break;\n    }\n  }; // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n\n\n  let focusLast = () => {\n    var ref; // Try to find the segment prior to the element that was clicked on.\n\n    let target = (ref = window.event) === null || ref === void 0 ? void 0 : ref.target;\n    let walker = $cIPI0$getFocusableTreeWalker(ref1.current, {\n      tabbable: true\n    });\n\n    if (target) {\n      walker.currentNode = target;\n      target = walker.previousNode();\n    } // If no target found, find the last element from the end.\n\n\n    if (!target) {\n      let last;\n\n      do {\n        last = walker.lastChild();\n        if (last) target = last;\n      } while (last);\n    } // Now go backwards until we find an element that is not a placeholder.\n\n\n    while (target === null || target === void 0 ? void 0 : target.hasAttribute('data-placeholder')) {\n      let prev = walker.previousNode();\n      if (prev && prev.hasAttribute('data-placeholder')) target = prev;else break;\n    }\n\n    if (target) target.focus();\n  };\n\n  let {\n    pressProps: pressProps\n  } = $cIPI0$usePress({\n    onPressStart(e) {\n      if (e.pointerType === 'mouse') focusLast();\n    },\n\n    onPress(e) {\n      if (e.pointerType !== 'mouse') focusLast();\n    }\n\n  });\n  return $cIPI0$mergeProps(pressProps, {\n    onKeyDown: onKeyDown\n  });\n}\n\nconst $16f0b7bb276bc17e$export$653eddfc964b0f8a = new WeakMap();\nconst $16f0b7bb276bc17e$export$300019f83c56d282 = '__role_' + Date.now();\nconst $16f0b7bb276bc17e$export$7b3062cd49e80452 = '__focusManager_' + Date.now();\n\nfunction $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref) {\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = $cIPI0$useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n\n  });\n  let formatMessage = $cIPI0$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let message = state.maxGranularity === 'hour' ? 'selectedTimeDescription' : 'selectedDateDescription';\n  let field = state.maxGranularity === 'hour' ? 'time' : 'date';\n  let description = state.value ? formatMessage(message, {\n    [field]: state.formatValue({\n      month: 'long'\n    })\n  }) : '';\n  let descProps = $cIPI0$useDescription(description); // If within a date picker or date range picker, the date field will have role=\"presentation\" and an aria-describedby\n  // will be passed in that references the value (e.g. entire range). Otherwise, add the field's value description.\n\n  let describedBy = props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation' ? fieldProps['aria-describedby'] : [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let propsFocusManager = props[$16f0b7bb276bc17e$export$7b3062cd49e80452];\n  let focusManager = $cIPI0$useMemo(() => propsFocusManager || $cIPI0$createFocusManager(ref), [propsFocusManager, ref]);\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation'); // Pass labels and other information to segments.\n\n  $16f0b7bb276bc17e$export$653eddfc964b0f8a.set(state, {\n    ariaLabel: props['aria-label'],\n    ariaLabelledBy: [props['aria-labelledby'], labelProps.id].filter(Boolean).join(' ') || undefined,\n    ariaDescribedBy: describedBy,\n    focusManager: focusManager\n  });\n  let autoFocusRef = $cIPI0$useRef(props.autoFocus); // When used within a date picker or date range picker, the field gets role=\"presentation\"\n  // rather than role=\"group\". Since the date picker/date range picker already has a role=\"group\"\n  // with a label and description, and the segments are already labeled by this as well, this\n  // avoids very verbose duplicate announcements.\n\n  let fieldDOMProps;\n  if (props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation') fieldDOMProps = {\n    role: 'presentation'\n  };else fieldDOMProps = $cIPI0$mergeProps(fieldProps, {\n    role: 'group',\n    'aria-disabled': props.isDisabled || undefined,\n    'aria-describedby': describedBy\n  });\n  $cIPI0$useEffect(() => {\n    if (autoFocusRef.current) focusManager.focusFirst();\n    autoFocusRef.current = false;\n  }, [focusManager]);\n  let domProps = $cIPI0$filterDOMProps(props);\n  return {\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: $cIPI0$mergeProps(domProps, fieldDOMProps, groupProps, focusWithinProps),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\n\nfunction $16f0b7bb276bc17e$export$4c842f6a241dc825(props, state, ref) {\n  return $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);\n}\n\nfunction $6057a3d2a53a12fd$export$42df105a73306d51(props, state, ref) {\n  let buttonId = $cIPI0$useId();\n  let dialogId = $cIPI0$useId();\n  let formatMessage = $cIPI0$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref);\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let date = state.formatValue(locale, {\n    month: 'long'\n  });\n  let description = date ? formatMessage('selectedDateDescription', {\n    date: date\n  }) : '';\n  let descProps = $cIPI0$useDescription(description);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let domProps = $cIPI0$filterDOMProps(props);\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref), [ref]);\n  return {\n    groupProps: $cIPI0$mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-labelledby': labelledBy,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: { ...fieldProps,\n      [$16f0b7bb276bc17e$export$300019f83c56d282]: 'presentation',\n      'aria-describedby': ariaDescribedBy,\n      value: state.value,\n      onChange: state.setValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      placeholderValue: props.placeholderValue,\n      hideTimeZone: props.hideTimeZone,\n      hourCycle: props.hourCycle,\n      granularity: props.granularity,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isRequired: props.isRequired,\n      validationState: state.validationState,\n      autoFocus: props.autoFocus\n    },\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    buttonProps: { ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateValue,\n      onChange: state.setDateValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      defaultFocusedValue: state.dateValue ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n\nfunction $3aeceb3a64eb8358$export$d42c60378c8168f8() {\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  return $cIPI0$useMemo(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {\n        type: 'dateTimeField'\n      });\n    } catch (err) {\n      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale);\n    }\n  }, [locale]);\n}\n\nclass $3aeceb3a64eb8358$var$DisplayNamesPolyfill {\n  of(field) {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n\n  constructor(locale) {\n    this.locale = locale;\n    this.dictionary = new $cIPI0$MessageDictionary( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  }\n\n}\n\nfunction $32489daedd52963e$export$1315d136e6f7581(segment, state, ref) {\n  let enteredKeys = $cIPI0$useRef('');\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let displayNames = $3aeceb3a64eb8358$export$d42c60378c8168f8();\n  let {\n    ariaLabel: ariaLabel,\n    ariaLabelledBy: ariaLabelledBy,\n    ariaDescribedBy: ariaDescribedBy,\n    focusManager: focusManager\n  } = $16f0b7bb276bc17e$export$653eddfc964b0f8a.get(state);\n  let textValue = segment.isPlaceholder ? '' : segment.text;\n  let options = $cIPI0$useMemo(() => state.dateFormatter.resolvedOptions(), [state.dateFormatter]);\n  let monthDateFormatter = $cIPI0$useDateFormatter({\n    month: 'long',\n    timeZone: options.timeZone\n  });\n  let hourDateFormatter = $cIPI0$useDateFormatter({\n    hour: 'numeric',\n    hour12: options.hour12,\n    timeZone: options.timeZone\n  });\n\n  if (segment.type === 'month' && !segment.isPlaceholder) {\n    let monthTextValue = monthDateFormatter.format(state.dateValue);\n    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;\n  } else if (segment.type === 'hour' && !segment.isPlaceholder) textValue = hourDateFormatter.format(state.dateValue);\n\n  let {\n    spinButtonProps: spinButtonProps\n  } = $cIPI0$useSpinButton({\n    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.\n    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.\n    // https://github.com/dequelabs/axe-core/issues/3505\n    value: segment.value,\n    textValue: textValue,\n    minValue: segment.minValue,\n    maxValue: segment.maxValue,\n    isDisabled: state.isDisabled,\n    isReadOnly: state.isReadOnly || !segment.isEditable,\n    isRequired: state.isRequired,\n    onIncrement: () => {\n      enteredKeys.current = '';\n      state.increment(segment.type);\n    },\n    onDecrement: () => {\n      enteredKeys.current = '';\n      state.decrement(segment.type);\n    },\n    onIncrementPage: () => {\n      enteredKeys.current = '';\n      state.incrementPage(segment.type);\n    },\n    onDecrementPage: () => {\n      enteredKeys.current = '';\n      state.decrementPage(segment.type);\n    },\n    onIncrementToMax: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.maxValue);\n    },\n    onDecrementToMin: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.minValue);\n    }\n  });\n  let parser = $cIPI0$useMemo(() => new $cIPI0$NumberParser(locale, {\n    maximumFractionDigits: 0\n  }), [locale]);\n\n  let backspace = () => {\n    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {\n      let newValue = segment.text.slice(0, -1);\n      let parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) state.clearSegment(segment.type);else state.setSegment(segment.type, parsed);\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') state.clearSegment(segment.type);\n  };\n\n  let onKeyDown = e => {\n    // Firefox does not fire selectstart for Ctrl/Cmd + A\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1742153\n    if (e.key === 'a' && ($cIPI0$isMac() ? e.metaKey : e.ctrlKey)) e.preventDefault();\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) return;\n\n    switch (e.key) {\n      case 'Backspace':\n      case 'Delete':\n        // Safari on iOS does not fire beforeinput for the backspace key because the cursor is at the start.\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n    }\n  }; // Safari dayPeriod option doesn't work...\n\n\n  let {\n    startsWith: startsWith\n  } = $cIPI0$useFilter({\n    sensitivity: 'base'\n  });\n  let amPmFormatter = $cIPI0$useDateFormatter({\n    hour: 'numeric',\n    hour12: true\n  });\n  let am = $cIPI0$useMemo(() => {\n    let date = new Date();\n    date.setHours(0);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n  let pm = $cIPI0$useMemo(() => {\n    let date = new Date();\n    date.setHours(12);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]); // Get a list of formatted era names so users can type the first character to choose one.\n\n  let eraFormatter = $cIPI0$useDateFormatter({\n    year: 'numeric',\n    era: 'narrow',\n    timeZone: 'UTC'\n  });\n  let eras1 = $cIPI0$useMemo(() => {\n    if (segment.type !== 'era') return [];\n    let date = $cIPI0$toCalendar(new $cIPI0$CalendarDate(1, 1, 1), state.calendar);\n    let eras = state.calendar.getEras().map(era => {\n      let eraDate = date.set({\n        year: 1,\n        month: 1,\n        day: 1,\n        era: era\n      }).toDate('UTC');\n      let parts = eraFormatter.formatToParts(eraDate);\n      let formatted = parts.find(p => p.type === 'era').value;\n      return {\n        era: era,\n        formatted: formatted\n      };\n    }); // Remove the common prefix from formatted values. This is so that in calendars with eras like\n    // ERA0 and ERA1 (e.g. Ethiopic), users can press \"0\" and \"1\" to select an era. In other cases,\n    // the first letter is used.\n\n    let prefixLength = $32489daedd52963e$var$commonPrefixLength(eras.map(era => era.formatted));\n    if (prefixLength) for (let era1 of eras) era1.formatted = era1.formatted.slice(prefixLength);\n    return eras;\n  }, [eraFormatter, state.calendar, segment.type]);\n\n  let onInput = key => {\n    if (state.isDisabled || state.isReadOnly) return;\n    let newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (startsWith(am, key)) state.setSegment('dayPeriod', 0);else if (startsWith(pm, key)) state.setSegment('dayPeriod', 12);else break;\n        focusManager.focusNext();\n        break;\n\n      case 'era':\n        {\n          let matched = eras1.find(e => startsWith(e.formatted, key));\n\n          if (matched) {\n            state.setSegment('era', matched.era);\n            focusManager.focusNext();\n          }\n\n          break;\n        }\n\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year':\n        {\n          if (!parser.isValidPartialNumber(newValue)) return;\n          let numberValue = parser.parse(newValue);\n          let segmentValue = numberValue;\n          let allowsZero = segment.minValue === 0;\n\n          if (segment.type === 'hour' && state.dateFormatter.resolvedOptions().hour12) {\n            switch (state.dateFormatter.resolvedOptions().hourCycle) {\n              case 'h11':\n                if (numberValue > 11) segmentValue = parser.parse(key);\n                break;\n\n              case 'h12':\n                allowsZero = false;\n                if (numberValue > 12) segmentValue = parser.parse(key);\n                break;\n            }\n\n            if (segment.value >= 12 && numberValue > 1) numberValue += 12;\n          } else if (numberValue > segment.maxValue) segmentValue = parser.parse(key);\n\n          if (isNaN(numberValue)) return;\n          let shouldSetValue = segmentValue !== 0 || allowsZero;\n          if (shouldSetValue) state.setSegment(segment.type, segmentValue);\n\n          if (Number(numberValue + '0') > segment.maxValue || newValue.length >= String(segment.maxValue).length) {\n            enteredKeys.current = '';\n            if (shouldSetValue) focusManager.focusNext();\n          } else enteredKeys.current = newValue;\n\n          break;\n        }\n    }\n  };\n\n  let onFocus = () => {\n    enteredKeys.current = '';\n    $cIPI0$scrollIntoView($cIPI0$getScrollParent(ref.current), ref.current); // Collapse selection to start or Chrome won't fire input events.\n\n    let selection = window.getSelection();\n    selection.collapse(ref.current);\n  };\n\n  let compositionRef = $cIPI0$useRef(''); // @ts-ignore - TODO: possibly old TS version? doesn't fail in my editor...\n\n  $cIPI0$useEvent(ref, 'beforeinput', e => {\n    e.preventDefault();\n\n    switch (e.inputType) {\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) backspace();\n        break;\n\n      case 'insertCompositionText':\n        // insertCompositionText cannot be canceled.\n        // Record the current state of the element so we can restore it in the `input` event below.\n        compositionRef.current = ref.current.textContent; // Safari gets stuck in a composition state unless we also assign to the value here.\n        // eslint-disable-next-line no-self-assign\n\n        ref.current.textContent = ref.current.textContent;\n        break;\n\n      default:\n        if (e.data != null) onInput(e.data);\n        break;\n    }\n  });\n  $cIPI0$useEvent(ref, 'input', e => {\n    let {\n      inputType: inputType,\n      data: data\n    } = e;\n\n    switch (inputType) {\n      case 'insertCompositionText':\n        // Reset the DOM to how it was in the beforeinput event.\n        ref.current.textContent = compositionRef.current; // Android sometimes fires key presses of letters as composition events. Need to handle am/pm keys here too.\n        // Can also happen e.g. with Pinyin keyboard on iOS.\n\n        if (startsWith(am, data) || startsWith(pm, data)) onInput(data);\n        break;\n    }\n  });\n  $cIPI0$useLayoutEffect(() => {\n    let element = ref.current;\n    return () => {\n      // If the focused segment is removed, focus the previous one, or the next one if there was no previous one.\n      if (document.activeElement === element) {\n        let prev = focusManager.focusPrevious();\n        if (!prev) focusManager.focusNext();\n      }\n    };\n  }, [ref, focusManager]); // spinbuttons cannot be focused with VoiceOver on iOS.\n\n  let touchPropOverrides = $cIPI0$isIOS() || segment.type === 'timeZoneName' ? {\n    role: 'textbox',\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuetext': null,\n    'aria-valuenow': null\n  } : {}; // Only apply aria-describedby to the first segment, unless the field is invalid. This avoids it being\n  // read every time the user navigates to a new segment.\n\n  let firstSegment = $cIPI0$useMemo(() => state.segments.find(s => s.isEditable), [state.segments]);\n  if (segment !== firstSegment && state.validationState !== 'invalid') ariaDescribedBy = undefined;\n  let id = $cIPI0$useId();\n  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable; // Prepend the label passed from the field to each segment name.\n  // This is needed because VoiceOver on iOS does not announce groups.\n\n  let name = segment.type === 'literal' ? '' : displayNames.of(segment.type);\n  let labelProps = $cIPI0$useLabels({\n    'aria-label': (ariaLabel ? ariaLabel + ' ' : '') + name,\n    'aria-labelledby': ariaLabelledBy\n  }); // Literal segments should not be visible to screen readers. We don't really need any of the above,\n  // but the rules of hooks mean hooks cannot be conditional so we have to put this condition here.\n\n  if (segment.type === 'literal') return {\n    segmentProps: {\n      'aria-hidden': true\n    }\n  };\n  return {\n    segmentProps: $cIPI0$mergeProps(spinButtonProps, labelProps, {\n      id: id,\n      ...touchPropOverrides,\n      'aria-invalid': state.validationState === 'invalid' ? 'true' : undefined,\n      'aria-describedby': ariaDescribedBy,\n      'aria-readonly': state.isReadOnly || !segment.isEditable ? 'true' : undefined,\n      'data-placeholder': segment.isPlaceholder || undefined,\n      contentEditable: isEditable,\n      suppressContentEditableWarning: isEditable,\n      spellCheck: isEditable ? 'false' : undefined,\n      autoCapitalize: isEditable ? 'off' : undefined,\n      autoCorrect: isEditable ? 'off' : undefined,\n      // Capitalization was changed in React 17...\n      [parseInt($cIPI0$react.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n      inputMode: state.isDisabled || segment.type === 'dayPeriod' || segment.type === 'era' || !isEditable ? undefined : 'numeric',\n      tabIndex: state.isDisabled ? undefined : 0,\n      onKeyDown: onKeyDown,\n      onFocus: onFocus,\n      style: {\n        caretColor: 'transparent'\n      },\n\n      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.\n      onPointerDown(e) {\n        e.stopPropagation();\n      },\n\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n\n    })\n  };\n}\n\nfunction $32489daedd52963e$var$commonPrefixLength(strings) {\n  // Sort the strings, and compare the characters in the first and last to find the common prefix.\n  strings.sort();\n  let first = strings[0];\n  let last = strings[strings.length - 1];\n\n  for (let i = 0; i < first.length; i++) {\n    if (first[i] !== last[i]) return i;\n  }\n\n  return 0;\n}\n\nfunction $887cac91b7cc8801$export$12fd5f0e9f4bb192(props, state, ref) {\n  var ref1, ref2;\n  let formatMessage = $cIPI0$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let range = state.formatValue(locale, {\n    month: 'long'\n  });\n  let description = range ? formatMessage('selectedRangeDescription', {\n    startDate: range.start,\n    endDate: range.end\n  }) : '';\n  let descProps = $cIPI0$useDescription(description);\n  let startFieldProps = {\n    'aria-label': formatMessage('startDate'),\n    'aria-labelledby': labelledBy\n  };\n  let endFieldProps = {\n    'aria-label': formatMessage('endDate'),\n    'aria-labelledby': labelledBy\n  };\n  let buttonId = $cIPI0$useId();\n  let dialogId = $cIPI0$useId();\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref, {\n    // Exclude the button from the focus manager.\n    accept: element => element.id !== buttonId\n  }), [ref, buttonId]);\n  let commonFieldProps = {\n    [$16f0b7bb276bc17e$export$7b3062cd49e80452]: focusManager,\n    [$16f0b7bb276bc17e$export$300019f83c56d282]: 'presentation',\n    'aria-describedby': ariaDescribedBy,\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    placeholderValue: props.placeholderValue,\n    hideTimeZone: props.hideTimeZone,\n    hourCycle: props.hourCycle,\n    granularity: props.granularity,\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    validationState: state.validationState\n  };\n  let domProps = $cIPI0$filterDOMProps(props);\n  return {\n    groupProps: $cIPI0$mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    buttonProps: { ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    startFieldProps: { ...startFieldProps,\n      ...commonFieldProps,\n      value: (ref1 = state.value) === null || ref1 === void 0 ? void 0 : ref1.start,\n      onChange: start => state.setDateTime('start', start),\n      autoFocus: props.autoFocus\n    },\n    endFieldProps: { ...endFieldProps,\n      ...commonFieldProps,\n      value: (ref2 = state.value) === null || ref2 === void 0 ? void 0 : ref2.end,\n      onChange: end => state.setDateTime('end', end)\n    },\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateRange,\n      onChange: state.setDateRange,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      allowsNonContiguousRanges: props.allowsNonContiguousRanges,\n      defaultFocusedValue: state.dateRange ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n\nexport { $6057a3d2a53a12fd$export$42df105a73306d51 as useDatePicker, $32489daedd52963e$export$1315d136e6f7581 as useDateSegment, $16f0b7bb276bc17e$export$5591b0b878c1a989 as useDateField, $16f0b7bb276bc17e$export$4c842f6a241dc825 as useTimeField, $887cac91b7cc8801$export$12fd5f0e9f4bb192 as useDateRangePicker, $3aeceb3a64eb8358$export$d42c60378c8168f8 as useDisplayNames };","map":{"version":3,"mappings":"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","names":["$f23889fffbde9058$exports","JSON","parse","$09d9badaa8903929$exports","$151b77e0fd711730$exports","$61915aa8630b90a2$exports","$35cea00159787840$exports","$518b4e82b9eacafd$exports","$1c2b297f7e2cf474$exports","$07f628a707cf9b18$exports","$db553ffe17c7f4db$exports","$4afcfe00cd703f83$exports","$1d2645d18d4c5be0$exports","$64cb6a9be1f6fa48$exports","$2a1ef2e8050be27a$exports","$ad429dca102acd0e$exports","$6e68cb5d1cb97bd2$exports","$a82ee9af063ee069$exports","$67e9091dbf37d4eb$exports","$75834f9729f653d1$exports","$a2df2c2520b4a7f0$exports","$aedcd71db4933ed5$exports","$3b2df9e54353046c$exports","$c03fe977fcfafe93$exports","$569f006fc292345f$exports","$7c2494e14452f2dd$exports","$eb82ef981b5592bf$exports","$6efa0e119f396950$exports","$7f5e57085d7f5049$exports","$578ee7c11dcdde7a$exports","$bbc3fd6cd0bc9d50$exports","$0b04512118591d2a$exports","$3a49d121fe4c9e1d$exports","$5ba21dbb8914919d$exports","$51078838e1b16cd7$exports","$33fab8219207655a$exports","$204383cf4f6b0d06$exports","$3dfb0f96be0d6a08$export$4a931266a3838b86","state","ref1","disableArrowNavigation","direction","$cIPI0$useLocale","focusManager","$cIPI0$useMemo","$cIPI0$createFocusManager","onKeyDown","e","altKey","key","preventDefault","stopPropagation","setOpen","focusNext","focusPrevious","focusLast","ref","target","window","event","walker","$cIPI0$getFocusableTreeWalker","current","tabbable","currentNode","previousNode","last","lastChild","hasAttribute","prev","focus","pressProps","$cIPI0$usePress","onPressStart","pointerType","onPress","$cIPI0$mergeProps","$16f0b7bb276bc17e$export$653eddfc964b0f8a","WeakMap","$16f0b7bb276bc17e$export$300019f83c56d282","Date","now","$16f0b7bb276bc17e$export$7b3062cd49e80452","$16f0b7bb276bc17e$export$5591b0b878c1a989","props","labelProps","fieldProps","descriptionProps","errorMessageProps","$cIPI0$useField","labelElementType","focusWithinProps","$cIPI0$useFocusWithin","onBlurWithin","confirmPlaceholder","formatMessage","$cIPI0$useMessageFormatter","message","maxGranularity","field","description","value","formatValue","month","descProps","$cIPI0$useDescription","describedBy","filter","Boolean","join","undefined","propsFocusManager","groupProps","set","ariaLabel","ariaLabelledBy","id","ariaDescribedBy","autoFocusRef","$cIPI0$useRef","autoFocus","fieldDOMProps","role","isDisabled","$cIPI0$useEffect","focusFirst","domProps","$cIPI0$filterDOMProps","onClick","$16f0b7bb276bc17e$export$4c842f6a241dc825","$6057a3d2a53a12fd$export$42df105a73306d51","buttonId","$cIPI0$useId","dialogId","labelledBy","locale","date","onChange","setValue","minValue","maxValue","placeholderValue","hideTimeZone","hourCycle","granularity","isReadOnly","isRequired","validationState","buttonProps","dialogProps","calendarProps","dateValue","setDateValue","isDateUnavailable","defaultFocusedValue","errorMessage","$3aeceb3a64eb8358$export$d42c60378c8168f8","Intl","DisplayNames","type","err","$3aeceb3a64eb8358$var$DisplayNamesPolyfill","of","dictionary","getStringForLocale","$cIPI0$MessageDictionary","$32489daedd52963e$export$1315d136e6f7581","segment","enteredKeys","displayNames","get","textValue","isPlaceholder","text","options","dateFormatter","resolvedOptions","monthDateFormatter","$cIPI0$useDateFormatter","timeZone","hourDateFormatter","hour","hour12","monthTextValue","format","spinButtonProps","$cIPI0$useSpinButton","isEditable","onIncrement","increment","onDecrement","decrement","onIncrementPage","incrementPage","onDecrementPage","decrementPage","onIncrementToMax","setSegment","onDecrementToMin","parser","$cIPI0$NumberParser","maximumFractionDigits","backspace","isValidPartialNumber","newValue","slice","parsed","length","clearSegment","$cIPI0$isMac","metaKey","ctrlKey","shiftKey","startsWith","$cIPI0$useFilter","sensitivity","amPmFormatter","am","setHours","formatToParts","find","part","pm","eraFormatter","year","era","eras1","$cIPI0$toCalendar","$cIPI0$CalendarDate","calendar","eras","getEras","map","eraDate","day","toDate","parts","formatted","p","prefixLength","$32489daedd52963e$var$commonPrefixLength","era1","onInput","matched","numberValue","segmentValue","allowsZero","isNaN","shouldSetValue","Number","String","onFocus","$cIPI0$scrollIntoView","$cIPI0$getScrollParent","selection","getSelection","collapse","compositionRef","$cIPI0$useEvent","inputType","textContent","data","$cIPI0$useLayoutEffect","element","document","activeElement","touchPropOverrides","$cIPI0$isIOS","firstSegment","segments","s","name","$cIPI0$useLabels","segmentProps","contentEditable","suppressContentEditableWarning","spellCheck","autoCapitalize","autoCorrect","parseInt","$cIPI0$react","version","inputMode","tabIndex","style","caretColor","onPointerDown","onMouseDown","strings","sort","first","i","$887cac91b7cc8801$export$12fd5f0e9f4bb192","ref2","range","startDate","start","endDate","end","startFieldProps","endFieldProps","accept","commonFieldProps","setDateTime","dateRange","setDateRange","allowsNonContiguousRanges"],"sources":["/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ar-AE.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/bg-BG.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/cs-CZ.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/da-DK.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/de-DE.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/el-GR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/en-US.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/es-ES.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/et-EE.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/fi-FI.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/fr-FR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/he-IL.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/hr-HR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/hu-HU.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/it-IT.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ja-JP.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ko-KR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/lt-LT.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/lv-LV.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/nb-NO.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/nl-NL.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pl-PL.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pt-BR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pt-PT.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ro-RO.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ru-RU.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sk-SK.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sl-SI.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sr-SP.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sv-SE.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/tr-TR.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/uk-UA.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/zh-CN.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/zh-TW.json","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/*.js","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDatePickerGroup.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateField.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDatePicker.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDisplayNames.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateSegment.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateRangePicker.ts"],"sourcesContent":["{\n  \"calendar\": \"التقويم\",\n  \"day\": \"يوم\",\n  \"dayPeriod\": \"ص/م\",\n  \"endDate\": \"تاريخ الانتهاء\",\n  \"era\": \"العصر\",\n  \"hour\": \"الساعات\",\n  \"minute\": \"الدقائق\",\n  \"month\": \"الشهر\",\n  \"second\": \"الثواني\",\n  \"selectedDateDescription\": \"تاريخ محدد: {date}\",\n  \"selectedRangeDescription\": \"المدى الزمني المحدد: {startDate} إلى {endDate}\",\n  \"selectedTimeDescription\": \"الوقت المحدد: {time}\",\n  \"startDate\": \"تاريخ البدء\",\n  \"timeZoneName\": \"التوقيت\",\n  \"weekday\": \"اليوم\",\n  \"year\": \"السنة\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"day\": \"ден\",\n  \"dayPeriod\": \"пр.об./сл.об.\",\n  \"endDate\": \"Крайна дата\",\n  \"era\": \"ера\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месец\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Избрана дата: {date}\",\n  \"selectedRangeDescription\": \"Избран диапазон: {startDate} до {endDate}\",\n  \"selectedTimeDescription\": \"Избрано време: {time}\",\n  \"startDate\": \"Начална дата\",\n  \"timeZoneName\": \"часова зона\",\n  \"weekday\": \"ден от седмицата\",\n  \"year\": \"година\"\n}\n","{\n  \"calendar\": \"Kalendář\",\n  \"day\": \"den\",\n  \"dayPeriod\": \"část dne\",\n  \"endDate\": \"Konečné datum\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minuta\",\n  \"month\": \"měsíc\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Vybrané datum: {date}\",\n  \"selectedRangeDescription\": \"Vybrané období: {startDate} až {endDate}\",\n  \"selectedTimeDescription\": \"Vybraný čas: {time}\",\n  \"startDate\": \"Počáteční datum\",\n  \"timeZoneName\": \"časové pásmo\",\n  \"weekday\": \"den v týdnu\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Slutdato\",\n  \"era\": \"æra\",\n  \"hour\": \"time\",\n  \"minute\": \"minut\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valgt dato: {date}\",\n  \"selectedRangeDescription\": \"Valgt interval: {startDate} til {endDate}\",\n  \"selectedTimeDescription\": \"Valgt tidspunkt: {time}\",\n  \"startDate\": \"Startdato\",\n  \"timeZoneName\": \"tidszone\",\n  \"weekday\": \"ugedag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"Tag\",\n  \"dayPeriod\": \"Tageshälfte\",\n  \"endDate\": \"Enddatum\",\n  \"era\": \"Epoche\",\n  \"hour\": \"Stunde\",\n  \"minute\": \"Minute\",\n  \"month\": \"Monat\",\n  \"second\": \"Sekunde\",\n  \"selectedDateDescription\": \"Ausgewähltes Datum: {date}\",\n  \"selectedRangeDescription\": \"Ausgewählter Bereich: {startDate} bis {endDate}\",\n  \"selectedTimeDescription\": \"Ausgewählte Zeit: {time}\",\n  \"startDate\": \"Anfangsdatum\",\n  \"timeZoneName\": \"Zeitzone\",\n  \"weekday\": \"Wochentag\",\n  \"year\": \"Jahr\"\n}\n","{\n  \"calendar\": \"Ημερολόγιο\",\n  \"day\": \"ημέρα\",\n  \"dayPeriod\": \"π.μ./μ.μ.\",\n  \"endDate\": \"Ημερομηνία λήξης\",\n  \"era\": \"περίοδος\",\n  \"hour\": \"ώρα\",\n  \"minute\": \"λεπτό\",\n  \"month\": \"μήνας\",\n  \"second\": \"δευτερόλεπτο\",\n  \"selectedDateDescription\": \"Επιλεγμένη ημερομηνία: {date}\",\n  \"selectedRangeDescription\": \"Επιλεγμένο εύρος: {startDate} έως {endDate}\",\n  \"selectedTimeDescription\": \"Επιλεγμένη ώρα: {time}\",\n  \"startDate\": \"Ημερομηνία έναρξης\",\n  \"timeZoneName\": \"ζώνη ώρας\",\n  \"weekday\": \"καθημερινή\",\n  \"year\": \"έτος\"\n}\n","{\n  \"era\": \"era\",\n  \"year\": \"year\",\n  \"month\": \"month\",\n  \"day\": \"day\",\n  \"hour\": \"hour\",\n  \"minute\": \"minute\",\n  \"second\": \"second\",\n  \"dayPeriod\": \"AM/PM\",\n  \"calendar\": \"Calendar\",\n  \"startDate\": \"Start Date\",\n  \"endDate\": \"End Date\",\n  \"weekday\": \"day of the week\",\n  \"timeZoneName\": \"time zone\",\n  \"selectedDateDescription\": \"Selected Date: {date}\",\n  \"selectedRangeDescription\": \"Selected Range: {startDate} to {endDate}\",\n  \"selectedTimeDescription\": \"Selected Time: {time}\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"day\": \"día\",\n  \"dayPeriod\": \"a. m./p. m.\",\n  \"endDate\": \"Fecha final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mes\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Fecha seleccionada: {date}\",\n  \"selectedRangeDescription\": \"Rango seleccionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora seleccionada: {time}\",\n  \"startDate\": \"Fecha de inicio\",\n  \"timeZoneName\": \"zona horaria\",\n  \"weekday\": \"día de la semana\",\n  \"year\": \"año\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"päev\",\n  \"dayPeriod\": \"enne/pärast lõunat\",\n  \"endDate\": \"Lõppkuupäev\",\n  \"era\": \"ajastu\",\n  \"hour\": \"tund\",\n  \"minute\": \"minut\",\n  \"month\": \"kuu\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valitud kuupäev: {date}\",\n  \"selectedRangeDescription\": \"Valitud vahemik: {startDate} kuni {endDate}\",\n  \"selectedTimeDescription\": \"Valitud aeg: {time}\",\n  \"startDate\": \"Alguskuupäev\",\n  \"timeZoneName\": \"ajavöönd\",\n  \"weekday\": \"nädalapäev\",\n  \"year\": \"aasta\"\n}\n","{\n  \"calendar\": \"Kalenteri\",\n  \"day\": \"päivä\",\n  \"dayPeriod\": \"vuorokaudenaika\",\n  \"endDate\": \"Päättymispäivä\",\n  \"era\": \"aikakausi\",\n  \"hour\": \"tunti\",\n  \"minute\": \"minuutti\",\n  \"month\": \"kuukausi\",\n  \"second\": \"sekunti\",\n  \"selectedDateDescription\": \"Valittu päivämäärä: {date}\",\n  \"selectedRangeDescription\": \"Valittu aikaväli: {startDate} – {endDate}\",\n  \"selectedTimeDescription\": \"Valittu aika: {time}\",\n  \"startDate\": \"Alkamispäivä\",\n  \"timeZoneName\": \"aikavyöhyke\",\n  \"weekday\": \"viikonpäivä\",\n  \"year\": \"vuosi\"\n}\n","{\n  \"calendar\": \"Calendrier\",\n  \"day\": \"jour\",\n  \"dayPeriod\": \"cadran\",\n  \"endDate\": \"Date de fin\",\n  \"era\": \"ère\",\n  \"hour\": \"heure\",\n  \"minute\": \"minute\",\n  \"month\": \"mois\",\n  \"second\": \"seconde\",\n  \"selectedDateDescription\": \"Date sélectionnée : {date}\",\n  \"selectedRangeDescription\": \"Plage sélectionnée : {startDate} au {endDate}\",\n  \"selectedTimeDescription\": \"Heure choisie : {time}\",\n  \"startDate\": \"Date de début\",\n  \"timeZoneName\": \"fuseau horaire\",\n  \"weekday\": \"jour de la semaine\",\n  \"year\": \"année\"\n}\n","{\n  \"calendar\": \"לוח שנה\",\n  \"day\": \"יום\",\n  \"dayPeriod\": \"לפנה״צ/אחה״צ\",\n  \"endDate\": \"תאריך סיום\",\n  \"era\": \"תקופה\",\n  \"hour\": \"שעה\",\n  \"minute\": \"דקה\",\n  \"month\": \"חודש\",\n  \"second\": \"שנייה\",\n  \"selectedDateDescription\": \"תאריך נבחר: {date}\",\n  \"selectedRangeDescription\": \"טווח נבחר: {startDate} עד {endDate}\",\n  \"selectedTimeDescription\": \"זמן נבחר: {time}\",\n  \"startDate\": \"תאריך התחלה\",\n  \"timeZoneName\": \"אזור זמן\",\n  \"weekday\": \"יום בשבוע\",\n  \"year\": \"שנה\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"era\",\n  \"hour\": \"sat\",\n  \"minute\": \"minuta\",\n  \"month\": \"mjesec\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Odabrani datum: {date}\",\n  \"selectedRangeDescription\": \"Odabrani raspon: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Odabrano vrijeme: {time}\",\n  \"startDate\": \"Datum početka\",\n  \"timeZoneName\": \"vremenska zona\",\n  \"weekday\": \"dan u tjednu\",\n  \"year\": \"godina\"\n}\n","{\n  \"calendar\": \"Naptár\",\n  \"day\": \"nap\",\n  \"dayPeriod\": \"napszak\",\n  \"endDate\": \"Befejező dátum\",\n  \"era\": \"éra\",\n  \"hour\": \"óra\",\n  \"minute\": \"perc\",\n  \"month\": \"hónap\",\n  \"second\": \"másodperc\",\n  \"selectedDateDescription\": \"Kijelölt dátum: {date}\",\n  \"selectedRangeDescription\": \"Kijelölt tartomány: {startDate}–{endDate}\",\n  \"selectedTimeDescription\": \"Kijelölt idő: {time}\",\n  \"startDate\": \"Kezdő dátum\",\n  \"timeZoneName\": \"időzóna\",\n  \"weekday\": \"hét napja\",\n  \"year\": \"év\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"day\": \"giorno\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data finale\",\n  \"era\": \"era\",\n  \"hour\": \"ora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mese\",\n  \"second\": \"secondo\",\n  \"selectedDateDescription\": \"Data selezionata: {date}\",\n  \"selectedRangeDescription\": \"Intervallo selezionato: da {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Ora selezionata: {time}\",\n  \"startDate\": \"Data iniziale\",\n  \"timeZoneName\": \"fuso orario\",\n  \"weekday\": \"giorno della settimana\",\n  \"year\": \"anno\"\n}\n","{\n  \"calendar\": \"カレンダー\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"午前/午後\",\n  \"endDate\": \"終了日\",\n  \"era\": \"時代\",\n  \"hour\": \"時\",\n  \"minute\": \"分\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"選択した日付 : {date}\",\n  \"selectedRangeDescription\": \"選択範囲 : {startDate} から {endDate}\",\n  \"selectedTimeDescription\": \"選択した時間 : {time}\",\n  \"startDate\": \"開始日\",\n  \"timeZoneName\": \"タイムゾーン\",\n  \"weekday\": \"曜日\",\n  \"year\": \"年\"\n}\n","{\n  \"calendar\": \"달력\",\n  \"day\": \"일\",\n  \"dayPeriod\": \"오전/오후\",\n  \"endDate\": \"종료 날짜\",\n  \"era\": \"연호\",\n  \"hour\": \"시\",\n  \"minute\": \"분\",\n  \"month\": \"월\",\n  \"second\": \"초\",\n  \"selectedDateDescription\": \"선택 일자: {date}\",\n  \"selectedRangeDescription\": \"선택 범위: {startDate} ~ {endDate}\",\n  \"selectedTimeDescription\": \"선택 시간: {time}\",\n  \"startDate\": \"시작 날짜\",\n  \"timeZoneName\": \"시간대\",\n  \"weekday\": \"요일\",\n  \"year\": \"년\"\n}\n","{\n  \"calendar\": \"Kalendorius\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"iki pietų / po pietų\",\n  \"endDate\": \"Pabaigos data\",\n  \"era\": \"era\",\n  \"hour\": \"valanda\",\n  \"minute\": \"minutė\",\n  \"month\": \"mėnuo\",\n  \"second\": \"sekundė\",\n  \"selectedDateDescription\": \"Pasirinkta data: {date}\",\n  \"selectedRangeDescription\": \"Pasirinktas intervalas: nuo {startDate} iki {endDate}\",\n  \"selectedTimeDescription\": \"Pasirinktas laikas: {time}\",\n  \"startDate\": \"Pradžios data\",\n  \"timeZoneName\": \"laiko juosta\",\n  \"weekday\": \"savaitės diena\",\n  \"year\": \"metai\"\n}\n","{\n  \"calendar\": \"Kalendārs\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"priekšpusdienā/pēcpusdienā\",\n  \"endDate\": \"Beigu datums\",\n  \"era\": \"ēra\",\n  \"hour\": \"stundas\",\n  \"minute\": \"minūtes\",\n  \"month\": \"mēnesis\",\n  \"second\": \"sekundes\",\n  \"selectedDateDescription\": \"Atlasītais datums: {date}\",\n  \"selectedRangeDescription\": \"Atlasītais diapazons: no {startDate} līdz {endDate}\",\n  \"selectedTimeDescription\": \"Atlasītais laiks: {time}\",\n  \"startDate\": \"Sākuma datums\",\n  \"timeZoneName\": \"laika josla\",\n  \"weekday\": \"nedēļas diena\",\n  \"year\": \"gads\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Sluttdato\",\n  \"era\": \"tidsalder\",\n  \"hour\": \"time\",\n  \"minute\": \"minutt\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valgt dato: {date}\",\n  \"selectedRangeDescription\": \"Valgt område: {startDate} til {endDate}\",\n  \"selectedTimeDescription\": \"Valgt tid: {time}\",\n  \"startDate\": \"Startdato\",\n  \"timeZoneName\": \"tidssone\",\n  \"weekday\": \"ukedag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Einddatum\",\n  \"era\": \"tijdperk\",\n  \"hour\": \"uur\",\n  \"minute\": \"minuut\",\n  \"month\": \"maand\",\n  \"second\": \"seconde\",\n  \"selectedDateDescription\": \"Geselecteerde datum: {date}\",\n  \"selectedRangeDescription\": \"Geselecteerd bereik: {startDate} tot {endDate}\",\n  \"selectedTimeDescription\": \"Geselecteerde tijd: {time}\",\n  \"startDate\": \"Startdatum\",\n  \"timeZoneName\": \"tijdzone\",\n  \"weekday\": \"dag van de week\",\n  \"year\": \"jaar\"\n}\n","{\n  \"calendar\": \"Kalendarz\",\n  \"day\": \"dzień\",\n  \"dayPeriod\": \"rano / po południu / wieczorem\",\n  \"endDate\": \"Data końcowa\",\n  \"era\": \"era\",\n  \"hour\": \"godzina\",\n  \"minute\": \"minuta\",\n  \"month\": \"miesiąc\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Wybrana data: {date}\",\n  \"selectedRangeDescription\": \"Wybrany zakres: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Wybrany czas: {time}\",\n  \"startDate\": \"Data początkowa\",\n  \"timeZoneName\": \"strefa czasowa\",\n  \"weekday\": \"dzień tygodnia\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Data selecionada: {date}\",\n  \"selectedRangeDescription\": \"Intervalo selecionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora selecionada: {time}\",\n  \"startDate\": \"Data inicial\",\n  \"timeZoneName\": \"fuso horário\",\n  \"weekday\": \"dia da semana\",\n  \"year\": \"ano\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"am/pm\",\n  \"endDate\": \"Data de Término\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Data selecionada: {date}\",\n  \"selectedRangeDescription\": \"Intervalo selecionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora selecionada: {time}\",\n  \"startDate\": \"Data de Início\",\n  \"timeZoneName\": \"fuso horário\",\n  \"weekday\": \"dia da semana\",\n  \"year\": \"ano\"\n}\n","{\n  \"calendar\": \"Calendar\",\n  \"day\": \"zi\",\n  \"dayPeriod\": \"a.m/p.m.\",\n  \"endDate\": \"Dată final\",\n  \"era\": \"eră\",\n  \"hour\": \"oră\",\n  \"minute\": \"minut\",\n  \"month\": \"lună\",\n  \"second\": \"secundă\",\n  \"selectedDateDescription\": \"Dată selectată: {date}\",\n  \"selectedRangeDescription\": \"Interval selectat: de la {startDate} până la {endDate}\",\n  \"selectedTimeDescription\": \"Ora selectată: {time}\",\n  \"startDate\": \"Dată început\",\n  \"timeZoneName\": \"fus orar\",\n  \"weekday\": \"ziua din săptămână\",\n  \"year\": \"an\"\n}\n","{\n  \"calendar\": \"Календарь\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Дата окончания\",\n  \"era\": \"эра\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месяц\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Выбранная дата: {date}\",\n  \"selectedRangeDescription\": \"Выбранный диапазон: с {startDate} по {endDate}\",\n  \"selectedTimeDescription\": \"Выбранное время: {time}\",\n  \"startDate\": \"Дата начала\",\n  \"timeZoneName\": \"часовой пояс\",\n  \"weekday\": \"день недели\",\n  \"year\": \"год\"\n}\n","{\n  \"calendar\": \"Kalendár\",\n  \"day\": \"deň\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Dátum ukončenia\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minúta\",\n  \"month\": \"mesiac\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Vybratý dátum: {date}\",\n  \"selectedRangeDescription\": \"Vybratý rozsah: od {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Vybratý čas: {time}\",\n  \"startDate\": \"Dátum začatia\",\n  \"timeZoneName\": \"časové pásmo\",\n  \"weekday\": \"deň týždňa\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Koledar\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"dop/pop\",\n  \"endDate\": \"Datum konca\",\n  \"era\": \"doba\",\n  \"hour\": \"ura\",\n  \"minute\": \"minuta\",\n  \"month\": \"mesec\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Izbrani datum: {date}\",\n  \"selectedRangeDescription\": \"Izbrano območje: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Izbrani čas: {time}\",\n  \"startDate\": \"Datum začetka\",\n  \"timeZoneName\": \"časovni pas\",\n  \"weekday\": \"dan v tednu\",\n  \"year\": \"leto\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"day\": \"дан\",\n  \"dayPeriod\": \"пре подне/по подне\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"ера\",\n  \"hour\": \"сат\",\n  \"minute\": \"минут\",\n  \"month\": \"месец\",\n  \"second\": \"секунд\",\n  \"selectedDateDescription\": \"Izabrani datum: {date}\",\n  \"selectedRangeDescription\": \"Izabrani opseg: od {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Izabrano vreme: {time}\",\n  \"startDate\": \"Datum početka\",\n  \"timeZoneName\": \"временска зона\",\n  \"weekday\": \"дан у недељи\",\n  \"year\": \"година\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"fm/em\",\n  \"endDate\": \"Slutdatum\",\n  \"era\": \"era\",\n  \"hour\": \"timme\",\n  \"minute\": \"minut\",\n  \"month\": \"månad\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valt datum: {date}\",\n  \"selectedRangeDescription\": \"Valt intervall: {startDate} till {endDate}\",\n  \"selectedTimeDescription\": \"Vald tid: {time}\",\n  \"startDate\": \"Startdatum\",\n  \"timeZoneName\": \"tidszon\",\n  \"weekday\": \"veckodag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Takvim\",\n  \"day\": \"gün\",\n  \"dayPeriod\": \"ÖÖ/ÖS\",\n  \"endDate\": \"Bitiş Tarihi\",\n  \"era\": \"çağ\",\n  \"hour\": \"saat\",\n  \"minute\": \"dakika\",\n  \"month\": \"ay\",\n  \"second\": \"saniye\",\n  \"selectedDateDescription\": \"Seçilen Tarih: {date}\",\n  \"selectedRangeDescription\": \"Seçilen Aralık: {startDate} - {endDate}\",\n  \"selectedTimeDescription\": \"Seçilen Zaman: {time}\",\n  \"startDate\": \"Başlangıç Tarihi\",\n  \"timeZoneName\": \"saat dilimi\",\n  \"weekday\": \"haftanın günü\",\n  \"year\": \"yıl\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"дп/пп\",\n  \"endDate\": \"Дата завершення\",\n  \"era\": \"ера\",\n  \"hour\": \"година\",\n  \"minute\": \"хвилина\",\n  \"month\": \"місяць\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Вибрана дата: {date}\",\n  \"selectedRangeDescription\": \"Вибраний діапазон: {startDate} — {endDate}\",\n  \"selectedTimeDescription\": \"Вибраний час: {time}\",\n  \"startDate\": \"Дата початку\",\n  \"timeZoneName\": \"часовий пояс\",\n  \"weekday\": \"день тижня\",\n  \"year\": \"рік\"\n}\n","{\n  \"calendar\": \"日历\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"结束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"选定的日期：{date}\",\n  \"selectedRangeDescription\": \"选定的范围：{startDate} 至 {endDate}\",\n  \"selectedTimeDescription\": \"选定的时间：{time}\",\n  \"startDate\": \"开始日期\",\n  \"timeZoneName\": \"时区\",\n  \"weekday\": \"工作日\",\n  \"year\": \"年\"\n}\n","{\n  \"calendar\": \"日曆\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"結束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"選定的日期：{date}\",\n  \"selectedRangeDescription\": \"選定的範圍：{startDate} 至 {endDate}\",\n  \"selectedTimeDescription\": \"選定的時間：{time}\",\n  \"startDate\": \"開始日期\",\n  \"timeZoneName\": \"时区\",\n  \"weekday\": \"工作日\",\n  \"year\": \"年\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","import {createFocusManager, getFocusableTreeWalker} from '@react-aria/focus';\nimport {DateFieldState, DatePickerState, DateRangePickerState} from '@react-stately/datepicker';\nimport {KeyboardEvent} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport function useDatePickerGroup(state: DatePickerState | DateRangePickerState | DateFieldState, ref: RefObject<HTMLElement>, disableArrowNavigation?: boolean) {\n  let {direction} = useLocale();\n  let focusManager = useMemo(() => createFocusManager(ref), [ref]);\n\n  // Open the popover on alt + arrow down\n  let onKeyDown = (e: KeyboardEvent) => {\n    if (e.altKey && (e.key === 'ArrowDown' || e.key === 'ArrowUp') && 'setOpen' in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n\n    if (disableArrowNavigation) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusNext();\n        } else {\n          focusManager.focusPrevious();\n        }\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusPrevious();\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n    }\n  };\n\n  // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n  let focusLast = () => {\n    // Try to find the segment prior to the element that was clicked on.\n    let target = window.event?.target as HTMLElement;\n    let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n    if (target) {\n      walker.currentNode = target;\n      target = walker.previousNode() as HTMLElement;\n    }\n\n    // If no target found, find the last element from the end.\n    if (!target) {\n      let last: HTMLElement;\n      do {\n        last = walker.lastChild() as HTMLElement;\n        if (last) {\n          target = last;\n        }\n      } while (last);\n    }\n\n    // Now go backwards until we find an element that is not a placeholder.\n    while (target?.hasAttribute('data-placeholder')) {\n      let prev = walker.previousNode() as HTMLElement;\n      if (prev && prev.hasAttribute('data-placeholder')) {\n        target = prev;\n      } else {\n        break;\n      }\n    }\n\n    if (target) {\n      target.focus();\n    }\n  };\n\n  let {pressProps} = usePress({\n    onPressStart(e) {\n      if (e.pointerType === 'mouse') {\n        focusLast();\n      }\n    },\n    onPress(e) {\n      if (e.pointerType !== 'mouse') {\n        focusLast();\n      }\n    }\n  });\n\n  return mergeProps(pressProps, {onKeyDown});\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDatePickerProps, AriaTimeFieldProps, DateValue, TimeValue} from '@react-types/datepicker';\nimport {createFocusManager, FocusManager} from '@react-aria/focus';\nimport {DateFieldState} from '@react-stately/datepicker';\nimport {filterDOMProps, mergeProps, useDescription} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useEffect, useMemo, useRef} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\n// Allows this hook to also be used with TimeField\nexport interface AriaDateFieldProps<T extends DateValue> extends Omit<AriaDatePickerProps<T>, 'value' | 'defaultValue' | 'onChange' | 'minValue' | 'maxValue' | 'placeholderValue'> {}\n\nexport interface DateFieldAria {\n   /** Props for the field's visible label element, if any. */\n  labelProps: HTMLAttributes<HTMLElement>,\n   /** Props for the field grouping element. */\n  fieldProps: HTMLAttributes<HTMLElement>,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n// Data that is passed between useDateField and useDateSegment.\ninterface HookData {\n  ariaLabel: string,\n  ariaLabelledBy: string,\n  ariaDescribedBy: string,\n  focusManager: FocusManager\n}\n\nexport const hookData = new WeakMap<DateFieldState, HookData>();\n\n// Private props that we pass from useDatePicker/useDateRangePicker.\n// Ideally we'd use a Symbol for this, but React doesn't support them: https://github.com/facebook/react/issues/7552\nexport const roleSymbol = '__role_' + Date.now();\nexport const focusManagerSymbol = '__focusManager_' + Date.now();\n\n/**\n * Provides the behavior and accessibility implementation for a date field component.\n * A date field allows users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nexport function useDateField<T extends DateValue>(props: AriaDateFieldProps<T>, state: DateFieldState, ref: RefObject<HTMLElement>): DateFieldAria {\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n  });\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let message = state.maxGranularity === 'hour' ? 'selectedTimeDescription' : 'selectedDateDescription';\n  let field = state.maxGranularity === 'hour' ? 'time' : 'date';\n  let description = state.value ? formatMessage(message, {[field]: state.formatValue({month: 'long'})}) : '';\n  let descProps = useDescription(description);\n\n  // If within a date picker or date range picker, the date field will have role=\"presentation\" and an aria-describedby\n  // will be passed in that references the value (e.g. entire range). Otherwise, add the field's value description.\n  let describedBy = props[roleSymbol] === 'presentation'\n    ? fieldProps['aria-describedby']\n    : [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let propsFocusManager = props[focusManagerSymbol];\n  let focusManager = useMemo(() => propsFocusManager || createFocusManager(ref), [propsFocusManager, ref]);\n  let groupProps = useDatePickerGroup(state, ref, props[roleSymbol] === 'presentation');\n\n  // Pass labels and other information to segments.\n  hookData.set(state, {\n    ariaLabel: props['aria-label'],\n    ariaLabelledBy: [props['aria-labelledby'], labelProps.id].filter(Boolean).join(' ') || undefined,\n    ariaDescribedBy: describedBy,\n    focusManager\n  });\n\n  let autoFocusRef = useRef(props.autoFocus);\n\n  // When used within a date picker or date range picker, the field gets role=\"presentation\"\n  // rather than role=\"group\". Since the date picker/date range picker already has a role=\"group\"\n  // with a label and description, and the segments are already labeled by this as well, this\n  // avoids very verbose duplicate announcements.\n  let fieldDOMProps: HTMLAttributes<HTMLElement>;\n  if (props[roleSymbol] === 'presentation') {\n    fieldDOMProps = {\n      role: 'presentation'\n    };\n  } else {\n    fieldDOMProps = mergeProps(fieldProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || undefined,\n      'aria-describedby': describedBy\n    });\n  }\n\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      focusManager.focusFirst();\n    }\n    autoFocusRef.current = false;\n  }, [focusManager]);\n\n  let domProps = filterDOMProps(props);\n  return {\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: mergeProps(domProps, fieldDOMProps, groupProps, focusWithinProps),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for a time field component.\n * A time field allows users to enter and edit time values using a keyboard.\n * Each part of a time value is displayed in an individually editable segment.\n */\nexport function useTimeField<T extends TimeValue>(props: AriaTimeFieldProps<T>, state: DateFieldState, ref: RefObject<HTMLElement>): DateFieldAria {\n  return useDateField(props, state, ref);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {CalendarProps} from '@react-types/calendar';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DatePickerState} from '@react-stately/datepicker';\nimport {filterDOMProps, mergeProps, useDescription, useId} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useMemo} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {roleSymbol} from './useDateField';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useLocale, useMessageFormatter} from '@react-aria/i18n';\n\nexport interface DatePickerAria {\n  /** Props for the date picker's visible label element, if any. */\n  labelProps: HTMLAttributes<HTMLElement>,\n  /** Props for the grouping element containing the date field and button. */\n  groupProps: HTMLAttributes<HTMLElement>,\n  /** Props for the date field. */\n  fieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the popover trigger button. */\n  buttonProps: AriaButtonProps,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  /** Props for the popover dialog. */\n  dialogProps: AriaDialogProps,\n  /** Props for the calendar within the popover dialog. */\n  calendarProps: CalendarProps<DateValue>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a date picker component.\n * A date picker combines a DateField and a Calendar popover to allow users to enter or select a date and time value.\n */\nexport function useDatePicker<T extends DateValue>(props: AriaDatePickerProps<T>, state: DatePickerState, ref: RefObject<HTMLElement>): DatePickerAria {\n  let buttonId = useId();\n  let dialogId = useId();\n  let formatMessage = useMessageFormatter(intlMessages);\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let date = state.formatValue(locale, {month: 'long'});\n  let description = date ? formatMessage('selectedDateDescription', {date}) : '';\n  let descProps = useDescription(description);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let domProps = filterDOMProps(props);\n  let focusManager = useMemo(() => createFocusManager(ref), [ref]);\n\n  return {\n    groupProps: mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-labelledby': labelledBy,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: {\n      ...fieldProps,\n      [roleSymbol]: 'presentation',\n      'aria-describedby': ariaDescribedBy,\n      value: state.value,\n      onChange: state.setValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      placeholderValue: props.placeholderValue,\n      hideTimeZone: props.hideTimeZone,\n      hourCycle: props.hourCycle,\n      granularity: props.granularity,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isRequired: props.isRequired,\n      validationState: state.validationState,\n      autoFocus: props.autoFocus\n    },\n    descriptionProps,\n    errorMessageProps,\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateValue,\n      onChange: state.setDateValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      defaultFocusedValue: state.dateValue ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MessageDictionary} from '@internationalized/message';\nimport {useLocale} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\ntype Field = 'era' | 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'dayPeriod' | 'timeZoneName' | 'weekday';\ninterface DisplayNames {\n  of(field: Field): string\n}\n\n/** @private */\nexport function useDisplayNames(): DisplayNames {\n  let {locale} = useLocale();\n  return useMemo(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {type: 'dateTimeField'});\n    } catch (err) {\n      return new DisplayNamesPolyfill(locale);\n    }\n  }, [locale]);\n}\n\nclass DisplayNamesPolyfill implements DisplayNames {\n  private locale: string;\n  private dictionary: MessageDictionary;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.dictionary = new MessageDictionary(intlMessages);\n  }\n\n  of(field: Field): string {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, toCalendar} from '@internationalized/date';\nimport {DateFieldState, DateSegment} from '@react-stately/datepicker';\nimport {getScrollParent, isIOS, isMac, mergeProps, scrollIntoView, useEvent, useId, useLabels, useLayoutEffect} from '@react-aria/utils';\nimport {hookData} from './useDateField';\nimport {NumberParser} from '@internationalized/number';\nimport React, {HTMLAttributes, RefObject, useMemo, useRef} from 'react';\nimport {useDateFormatter, useFilter, useLocale} from '@react-aria/i18n';\nimport {useDisplayNames} from './useDisplayNames';\nimport {useSpinButton} from '@react-aria/spinbutton';\n\nexport interface DateSegmentAria {\n  /** Props for the segment element. */\n  segmentProps: HTMLAttributes<HTMLDivElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a segment in a date field.\n * A date segment displays an individual unit of a date and time, and allows users to edit\n * the value by typing or using the arrow keys to increment and decrement.\n */\nexport function useDateSegment(segment: DateSegment, state: DateFieldState, ref: RefObject<HTMLElement>): DateSegmentAria {\n  let enteredKeys = useRef('');\n  let {locale} = useLocale();\n  let displayNames = useDisplayNames();\n  let {ariaLabel, ariaLabelledBy, ariaDescribedBy, focusManager} = hookData.get(state);\n\n  let textValue = segment.isPlaceholder ? '' : segment.text;\n  let options = useMemo(() => state.dateFormatter.resolvedOptions(), [state.dateFormatter]);\n  let monthDateFormatter = useDateFormatter({month: 'long', timeZone: options.timeZone});\n  let hourDateFormatter = useDateFormatter({\n    hour: 'numeric',\n    hour12: options.hour12,\n    timeZone: options.timeZone\n  });\n\n  if (segment.type === 'month' && !segment.isPlaceholder) {\n    let monthTextValue = monthDateFormatter.format(state.dateValue);\n    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;\n  } else if (segment.type === 'hour' && !segment.isPlaceholder) {\n    textValue = hourDateFormatter.format(state.dateValue);\n  }\n\n  let {spinButtonProps} = useSpinButton({\n    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.\n    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.\n    // https://github.com/dequelabs/axe-core/issues/3505\n    value: segment.value,\n    textValue,\n    minValue: segment.minValue,\n    maxValue: segment.maxValue,\n    isDisabled: state.isDisabled,\n    isReadOnly: state.isReadOnly || !segment.isEditable,\n    isRequired: state.isRequired,\n    onIncrement: () => {\n      enteredKeys.current = '';\n      state.increment(segment.type);\n    },\n    onDecrement: () => {\n      enteredKeys.current = '';\n      state.decrement(segment.type);\n    },\n    onIncrementPage: () => {\n      enteredKeys.current = '';\n      state.incrementPage(segment.type);\n    },\n    onDecrementPage: () => {\n      enteredKeys.current = '';\n      state.decrementPage(segment.type);\n    },\n    onIncrementToMax: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.maxValue);\n    },\n    onDecrementToMin: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.minValue);\n    }\n  });\n\n  let parser = useMemo(() => new NumberParser(locale, {maximumFractionDigits: 0}), [locale]);\n\n  let backspace = () => {\n    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {\n      let newValue = segment.text.slice(0, -1);\n      let parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        state.clearSegment(segment.type);\n      } else {\n        state.setSegment(segment.type, parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      state.clearSegment(segment.type);\n    }\n  };\n\n  let onKeyDown = (e) => {\n    // Firefox does not fire selectstart for Ctrl/Cmd + A\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1742153\n    if (e.key === 'a' && (isMac() ? e.metaKey : e.ctrlKey)) {\n      e.preventDefault();\n    }\n\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Backspace':\n      case 'Delete': {\n        // Safari on iOS does not fire beforeinput for the backspace key because the cursor is at the start.\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n    }\n  };\n\n  // Safari dayPeriod option doesn't work...\n  let {startsWith} = useFilter({sensitivity: 'base'});\n  let amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  let am = useMemo(() => {\n    let date = new Date();\n    date.setHours(0);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  let pm = useMemo(() => {\n    let date = new Date();\n    date.setHours(12);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  // Get a list of formatted era names so users can type the first character to choose one.\n  let eraFormatter = useDateFormatter({year: 'numeric', era: 'narrow', timeZone: 'UTC'});\n  let eras = useMemo(() => {\n    if (segment.type !== 'era') {\n      return [];\n    }\n\n    let date = toCalendar(new CalendarDate(1, 1, 1), state.calendar);\n    let eras = state.calendar.getEras().map(era => {\n      let eraDate = date.set({year: 1, month: 1, day: 1, era}).toDate('UTC');\n      let parts = eraFormatter.formatToParts(eraDate);\n      let formatted = parts.find(p => p.type === 'era').value;\n      return {era, formatted};\n    });\n\n    // Remove the common prefix from formatted values. This is so that in calendars with eras like\n    // ERA0 and ERA1 (e.g. Ethiopic), users can press \"0\" and \"1\" to select an era. In other cases,\n    // the first letter is used.\n    let prefixLength = commonPrefixLength(eras.map(era => era.formatted));\n    if (prefixLength) {\n      for (let era of eras) {\n        era.formatted = era.formatted.slice(prefixLength);\n      }\n    }\n\n    return eras;\n  }, [eraFormatter, state.calendar, segment.type]);\n\n  let onInput = (key: string) => {\n    if (state.isDisabled || state.isReadOnly) {\n      return;\n    }\n\n    let newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (startsWith(am, key)) {\n          state.setSegment('dayPeriod', 0);\n        } else if (startsWith(pm, key)) {\n          state.setSegment('dayPeriod', 12);\n        } else {\n          break;\n        }\n        focusManager.focusNext();\n        break;\n      case 'era': {\n        let matched = eras.find(e => startsWith(e.formatted, key));\n        if (matched) {\n          state.setSegment('era', matched.era);\n          focusManager.focusNext();\n        }\n        break;\n      }\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && state.dateFormatter.resolvedOptions().hour12) {\n          switch (state.dateFormatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (isNaN(numberValue)) {\n          return;\n        }\n\n        let shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          state.setSegment(segment.type, segmentValue);\n        }\n\n        if (Number(numberValue + '0') > segment.maxValue || newValue.length >= String(segment.maxValue).length) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  let onFocus = () => {\n    enteredKeys.current = '';\n    scrollIntoView(getScrollParent(ref.current) as HTMLElement, ref.current);\n\n    // Collapse selection to start or Chrome won't fire input events.\n    let selection = window.getSelection();\n    selection.collapse(ref.current);\n  };\n\n  let compositionRef = useRef('');\n  // @ts-ignore - TODO: possibly old TS version? doesn't fail in my editor...\n  useEvent(ref, 'beforeinput', e => {\n    e.preventDefault();\n\n    switch (e.inputType) {\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) {\n          backspace();\n        }\n        break;\n      case 'insertCompositionText':\n        // insertCompositionText cannot be canceled.\n        // Record the current state of the element so we can restore it in the `input` event below.\n        compositionRef.current = ref.current.textContent;\n\n        // Safari gets stuck in a composition state unless we also assign to the value here.\n        // eslint-disable-next-line no-self-assign\n        ref.current.textContent = ref.current.textContent;\n        break;\n      default:\n        if (e.data != null) {\n          onInput(e.data);\n        }\n        break;\n    }\n  });\n\n  useEvent(ref, 'input', (e: InputEvent) => {\n    let {inputType, data} = e;\n    switch (inputType) {\n      case 'insertCompositionText':\n        // Reset the DOM to how it was in the beforeinput event.\n        ref.current.textContent = compositionRef.current;\n\n        // Android sometimes fires key presses of letters as composition events. Need to handle am/pm keys here too.\n        // Can also happen e.g. with Pinyin keyboard on iOS.\n        if (startsWith(am, data) || startsWith(pm, data)) {\n          onInput(data);\n        }\n        break;\n    }\n  });\n\n  useLayoutEffect(() => {\n    let element = ref.current;\n    return () => {\n      // If the focused segment is removed, focus the previous one, or the next one if there was no previous one.\n      if (document.activeElement === element) {\n        let prev = focusManager.focusPrevious();\n        if (!prev) {\n          focusManager.focusNext();\n        }\n      }\n    };\n  }, [ref, focusManager]);\n\n  // spinbuttons cannot be focused with VoiceOver on iOS.\n  let touchPropOverrides = isIOS() || segment.type === 'timeZoneName' ? {\n    role: 'textbox',\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuetext': null,\n    'aria-valuenow': null\n  } : {};\n\n  // Only apply aria-describedby to the first segment, unless the field is invalid. This avoids it being\n  // read every time the user navigates to a new segment.\n  let firstSegment = useMemo(() => state.segments.find(s => s.isEditable), [state.segments]);\n  if (segment !== firstSegment && state.validationState !== 'invalid') {\n    ariaDescribedBy = undefined;\n  }\n\n  let id = useId();\n  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable;\n\n  // Prepend the label passed from the field to each segment name.\n  // This is needed because VoiceOver on iOS does not announce groups.\n  let name = segment.type === 'literal' ? '' : displayNames.of(segment.type);\n  let labelProps = useLabels({\n    'aria-label': (ariaLabel ? ariaLabel + ' ' : '') + name,\n    'aria-labelledby': ariaLabelledBy\n  });\n\n  // Literal segments should not be visible to screen readers. We don't really need any of the above,\n  // but the rules of hooks mean hooks cannot be conditional so we have to put this condition here.\n  if (segment.type === 'literal') {\n    return {\n      segmentProps: {\n        'aria-hidden': true\n      }\n    };\n  }\n\n  return {\n    segmentProps: mergeProps(spinButtonProps, labelProps, {\n      id,\n      ...touchPropOverrides,\n      'aria-invalid': state.validationState === 'invalid' ? 'true' : undefined,\n      'aria-describedby': ariaDescribedBy,\n      'aria-readonly': state.isReadOnly || !segment.isEditable ? 'true' : undefined,\n      'data-placeholder': segment.isPlaceholder || undefined,\n      contentEditable: isEditable,\n      suppressContentEditableWarning: isEditable,\n      spellCheck: isEditable ? 'false' : undefined,\n      autoCapitalize: isEditable ? 'off' : undefined,\n      autoCorrect: isEditable ? 'off' : undefined,\n      // Capitalization was changed in React 17...\n      [parseInt(React.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n      inputMode: state.isDisabled || segment.type === 'dayPeriod' || segment.type === 'era' || !isEditable ? undefined : 'numeric',\n      tabIndex: state.isDisabled ? undefined : 0,\n      onKeyDown,\n      onFocus,\n      style: {\n        caretColor: 'transparent'\n      },\n      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.\n      onPointerDown(e) {\n        e.stopPropagation();\n      },\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n    })\n  };\n}\n\nfunction commonPrefixLength(strings: string[]): number {\n  // Sort the strings, and compare the characters in the first and last to find the common prefix.\n  strings.sort();\n  let first = strings[0];\n  let last = strings[strings.length - 1];\n  for (let i = 0; i < first.length; i++) {\n    if (first[i] !== last[i]) {\n      return i;\n    }\n  }\n  return 0;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, AriaDateRangePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DateRangePickerState} from '@react-stately/datepicker';\nimport {filterDOMProps, mergeProps, useDescription, useId} from '@react-aria/utils';\nimport {focusManagerSymbol, roleSymbol} from './useDateField';\nimport {HTMLAttributes, RefObject, useMemo} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {RangeCalendarProps} from '@react-types/calendar';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useLocale, useMessageFormatter} from '@react-aria/i18n';\n\nexport interface DateRangePickerAria {\n  /** Props for the date range picker's visible label element, if any. */\n  labelProps: HTMLAttributes<HTMLElement>,\n  /** Props for the grouping element containing the date fields and button. */\n  groupProps: HTMLAttributes<HTMLElement>,\n  /** Props for the start date field. */\n  startFieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the end date field. */\n  endFieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the popover trigger button. */\n  buttonProps: AriaButtonProps,\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>,\n  /** Props for the popover dialog. */\n  dialogProps: AriaDialogProps,\n  /** Props for the range calendar within the popover dialog. */\n  calendarProps: RangeCalendarProps<DateValue>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a date picker component.\n * A date range picker combines two DateFields and a RangeCalendar popover to allow\n * users to enter or select a date and time range.\n */\nexport function useDateRangePicker<T extends DateValue>(props: AriaDateRangePickerProps<T>, state: DateRangePickerState, ref: RefObject<HTMLElement>): DateRangePickerAria {\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let range = state.formatValue(locale, {month: 'long'});\n  let description = range ? formatMessage('selectedRangeDescription', {startDate: range.start, endDate: range.end}) : '';\n  let descProps = useDescription(description);\n\n  let startFieldProps = {\n    'aria-label': formatMessage('startDate'),\n    'aria-labelledby': labelledBy\n  };\n\n  let endFieldProps = {\n    'aria-label': formatMessage('endDate'),\n    'aria-labelledby': labelledBy\n  };\n\n  let buttonId = useId();\n  let dialogId = useId();\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let focusManager = useMemo(() => createFocusManager(ref, {\n    // Exclude the button from the focus manager.\n    accept: element => element.id !== buttonId\n  }), [ref, buttonId]);\n\n  let commonFieldProps = {\n    [focusManagerSymbol]: focusManager,\n    [roleSymbol]: 'presentation',\n    'aria-describedby': ariaDescribedBy,\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    placeholderValue: props.placeholderValue,\n    hideTimeZone: props.hideTimeZone,\n    hourCycle: props.hourCycle,\n    granularity: props.granularity,\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    validationState: state.validationState\n  };\n\n  let domProps = filterDOMProps(props);\n\n  return {\n    groupProps: mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': formatMessage('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    startFieldProps: {\n      ...startFieldProps,\n      ...commonFieldProps,\n      value: state.value?.start,\n      onChange: start => state.setDateTime('start', start),\n      autoFocus: props.autoFocus\n    },\n    endFieldProps: {\n      ...endFieldProps,\n      ...commonFieldProps,\n      value: state.value?.end,\n      onChange: end => state.setDateTime('end', end)\n    },\n    descriptionProps,\n    errorMessageProps,\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateRange,\n      onChange: state.setDateRange,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      allowsNonContiguousRanges: props.allowsNonContiguousRanges,\n      defaultFocusedValue: state.dateRange ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}