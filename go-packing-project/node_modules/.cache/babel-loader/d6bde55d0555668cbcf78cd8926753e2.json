{"ast":null,"code":"import { DateFormatter as $keQhS$DateFormatter, toCalendar as $keQhS$toCalendar, toCalendarDate as $keQhS$toCalendarDate, today as $keQhS$today, GregorianCalendar as $keQhS$GregorianCalendar, startOfWeek as $keQhS$startOfWeek, startOfMonth as $keQhS$startOfMonth, endOfWeek as $keQhS$endOfWeek, endOfMonth as $keQhS$endOfMonth, isSameDay as $keQhS$isSameDay, getDayOfWeek as $keQhS$getDayOfWeek, startOfYear as $keQhS$startOfYear, maxDate as $keQhS$maxDate, minDate as $keQhS$minDate, isEqualDay as $keQhS$isEqualDay } from \"@internationalized/date\";\nimport { useControlledState as $keQhS$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $keQhS$useMemo, useState as $keQhS$useState, useRef as $keQhS$useRef } from \"react\";\n\nfunction $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue) {\n  return minValue != null && date.compare(minValue) < 0 || maxValue != null && date.compare(maxValue) > 0;\n}\n\nfunction $f62d864046160412$export$f4a51ff076cc9a09(date, duration, locale, minValue, maxValue) {\n  let halfDuration = {};\n\n  for (let key in duration) {\n    halfDuration[key] = Math.floor(duration[key] / 2);\n    if (halfDuration[key] > 0 && duration[key] % 2 === 0) halfDuration[key]--;\n  }\n\n  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(halfDuration);\n  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\n\nfunction $f62d864046160412$export$144a00ba6044eb9(date, duration, locale, minValue, maxValue) {\n  // align to the start of the largest unit\n  let aligned = date;\n  if (duration.years) aligned = $keQhS$startOfYear(date);else if (duration.months) aligned = $keQhS$startOfMonth(date);else if (duration.weeks) aligned = $keQhS$startOfWeek(date, locale);\n  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\n\nfunction $f62d864046160412$export$530edbfc915b2b04(date, duration, locale, minValue, maxValue) {\n  let d = { ...duration\n  }; // subtract 1 from the smallest unit\n\n  if (duration.days) d.days--;else if (duration.weeks) d.weeks--;else if (duration.months) d.months--;else if (duration.years) d.years--;\n  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(d);\n  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);\n}\n\nfunction $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue) {\n  if (minValue && date.compare(minValue) >= 0) aligned = $keQhS$maxDate(aligned, $f62d864046160412$export$144a00ba6044eb9($keQhS$toCalendarDate(minValue), duration, locale));\n  if (maxValue && date.compare(maxValue) <= 0) aligned = $keQhS$minDate(aligned, $f62d864046160412$export$530edbfc915b2b04($keQhS$toCalendarDate(maxValue), duration, locale));\n  return aligned;\n}\n\nfunction $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue) {\n  if (minValue) date = $keQhS$maxDate(date, $keQhS$toCalendarDate(minValue));\n  if (maxValue) date = $keQhS$minDate(date, $keQhS$toCalendarDate(maxValue));\n  return date;\n}\n\nfunction $f62d864046160412$export$a1d3911297b952d7(date, minValue, isDateUnavailable) {\n  if (!isDateUnavailable) return date;\n\n  while (date.compare(minValue) >= 0 && isDateUnavailable(date)) date = date.subtract({\n    days: 1\n  });\n\n  if (date.compare(minValue) >= 0) return date;\n}\n\nfunction $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {\n  let defaultFormatter = $keQhS$useMemo(() => new $keQhS$DateFormatter(props.locale), [props.locale]);\n  let resolvedOptions = $keQhS$useMemo(() => defaultFormatter.resolvedOptions(), [defaultFormatter]);\n  let {\n    locale: locale,\n    createCalendar: createCalendar,\n    visibleDuration = {\n      months: 1\n    },\n    minValue: minValue,\n    maxValue: maxValue,\n    selectionAlignment: selectionAlignment,\n    isDateUnavailable: isDateUnavailable\n  } = props;\n  let calendar = $keQhS$useMemo(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n  let [value, setControlledValue] = $keQhS$useControlledState(props.value, props.defaultValue, props.onChange);\n  let calendarDateValue = $keQhS$useMemo(() => value ? $keQhS$toCalendar($keQhS$toCalendarDate(value), calendar) : null, [value, calendar]);\n  let timeZone = $keQhS$useMemo(() => value && 'timeZone' in value ? value.timeZone : resolvedOptions.timeZone, [value, resolvedOptions.timeZone]);\n  let focusedCalendarDate = $keQhS$useMemo(() => props.focusedValue ? $f62d864046160412$export$4f5203c0d889109e($keQhS$toCalendar($keQhS$toCalendarDate(props.focusedValue), calendar), minValue, maxValue) : undefined, [props.focusedValue, calendar, minValue, maxValue]);\n  let defaultFocusedCalendarDate = $keQhS$useMemo(() => $f62d864046160412$export$4f5203c0d889109e(props.defaultFocusedValue ? $keQhS$toCalendar($keQhS$toCalendarDate(props.defaultFocusedValue), calendar) : calendarDateValue || $keQhS$toCalendar($keQhS$today(timeZone), calendar), minValue, maxValue), [props.defaultFocusedValue, calendarDateValue, timeZone, calendar, minValue, maxValue]);\n  let [focusedDate, setFocusedDate] = $keQhS$useControlledState(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n  let [startDate, setStartDate] = $keQhS$useState(() => {\n    switch (selectionAlignment) {\n      case 'start':\n        return $f62d864046160412$export$144a00ba6044eb9(focusedDate, visibleDuration, locale, minValue, maxValue);\n\n      case 'end':\n        return $f62d864046160412$export$530edbfc915b2b04(focusedDate, visibleDuration, locale, minValue, maxValue);\n\n      case 'center':\n      default:\n        return $f62d864046160412$export$f4a51ff076cc9a09(focusedDate, visibleDuration, locale, minValue, maxValue);\n    }\n  });\n  let [isFocused, setFocused] = $keQhS$useState(props.autoFocus || false);\n  let endDate = $keQhS$useMemo(() => {\n    let duration = { ...visibleDuration\n    };\n    if (duration.days) duration.days--;else duration.days = -1;\n    return startDate.add(duration);\n  }, [startDate, visibleDuration]); // Reset focused date and visible range when calendar changes.\n\n  let lastCalendarIdentifier = $keQhS$useRef(calendar.identifier);\n\n  if (calendar.identifier !== lastCalendarIdentifier.current) {\n    let newFocusedDate = $keQhS$toCalendar(focusedDate, calendar);\n    setStartDate($f62d864046160412$export$f4a51ff076cc9a09(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n    setFocusedDate(newFocusedDate);\n    lastCalendarIdentifier.current = calendar.identifier;\n  }\n\n  if ($f62d864046160412$export$eac50920cf2fd59a(focusedDate, minValue, maxValue)) // If the focused date was moved to an invalid value, it can't be focused, so constrain it.\n    setFocusedDate($f62d864046160412$export$4f5203c0d889109e(focusedDate, minValue, maxValue));else if (focusedDate.compare(startDate) < 0) setStartDate($f62d864046160412$export$530edbfc915b2b04(focusedDate, visibleDuration, locale, minValue, maxValue));else if (focusedDate.compare(endDate) > 0) setStartDate($f62d864046160412$export$144a00ba6044eb9(focusedDate, visibleDuration, locale, minValue, maxValue)); // Sets focus to a specific cell date\n\n  function focusCell(date) {\n    date = $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue);\n    setFocusedDate(date);\n  }\n\n  function setValue(newValue) {\n    if (!props.isDisabled && !props.isReadOnly) {\n      newValue = $f62d864046160412$export$4f5203c0d889109e(newValue, minValue, maxValue);\n      newValue = $f62d864046160412$export$a1d3911297b952d7(newValue, startDate, isDateUnavailable);\n      if (!newValue) return; // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n\n      newValue = $keQhS$toCalendar(newValue, (value === null || value === void 0 ? void 0 : value.calendar) || new $keQhS$GregorianCalendar()); // Preserve time if the input value had one.\n\n      if (value && 'hour' in value) setControlledValue(value.set(newValue));else setControlledValue(newValue);\n    }\n  }\n\n  let isUnavailable = $keQhS$useMemo(() => {\n    if (!calendarDateValue) return false;\n    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) return true;\n    return $f62d864046160412$export$eac50920cf2fd59a(calendarDateValue, minValue, maxValue);\n  }, [calendarDateValue, isDateUnavailable, minValue, maxValue]);\n  let validationState = props.validationState || (isUnavailable ? 'invalid' : null);\n  return {\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    value: calendarDateValue,\n    setValue: setValue,\n    visibleRange: {\n      start: startDate,\n      end: endDate\n    },\n    minValue: minValue,\n    maxValue: maxValue,\n    focusedDate: focusedDate,\n    timeZone: timeZone,\n    validationState: validationState,\n\n    setFocusedDate(date) {\n      focusCell(date);\n      setFocused(true);\n    },\n\n    focusNextDay() {\n      focusCell(focusedDate.add({\n        days: 1\n      }));\n    },\n\n    focusPreviousDay() {\n      focusCell(focusedDate.subtract({\n        days: 1\n      }));\n    },\n\n    focusNextRow() {\n      if (visibleDuration.days) this.focusNextPage();else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n        weeks: 1\n      }));\n    },\n\n    focusPreviousRow() {\n      if (visibleDuration.days) this.focusPreviousPage();else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n        weeks: 1\n      }));\n    },\n\n    focusNextPage() {\n      let start = startDate.add(visibleDuration);\n      setFocusedDate($f62d864046160412$export$4f5203c0d889109e(focusedDate.add(visibleDuration), minValue, maxValue));\n      setStartDate($f62d864046160412$export$144a00ba6044eb9($f62d864046160412$export$5bb865b12696a77d(focusedDate, start, visibleDuration, locale, minValue, maxValue), visibleDuration, locale));\n    },\n\n    focusPreviousPage() {\n      let start = startDate.subtract(visibleDuration);\n      setFocusedDate($f62d864046160412$export$4f5203c0d889109e(focusedDate.subtract(visibleDuration), minValue, maxValue));\n      setStartDate($f62d864046160412$export$144a00ba6044eb9($f62d864046160412$export$5bb865b12696a77d(focusedDate, start, visibleDuration, locale, minValue, maxValue), visibleDuration, locale));\n    },\n\n    focusSectionStart() {\n      if (visibleDuration.days) focusCell(startDate);else if (visibleDuration.weeks) focusCell($keQhS$startOfWeek(focusedDate, locale));else if (visibleDuration.months || visibleDuration.years) focusCell($keQhS$startOfMonth(focusedDate));\n    },\n\n    focusSectionEnd() {\n      if (visibleDuration.days) focusCell(endDate);else if (visibleDuration.weeks) focusCell($keQhS$endOfWeek(focusedDate, locale));else if (visibleDuration.months || visibleDuration.years) focusCell($keQhS$endOfMonth(focusedDate));\n    },\n\n    focusNextSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) this.focusNextPage();else if (visibleDuration.weeks) focusCell(focusedDate.add({\n        months: 1\n      }));else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.add({\n        years: 1\n      }));\n    },\n\n    focusPreviousSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) this.focusPreviousPage();else if (visibleDuration.weeks) focusCell(focusedDate.subtract({\n        months: 1\n      }));else if (visibleDuration.months || visibleDuration.years) focusCell(focusedDate.subtract({\n        years: 1\n      }));\n    },\n\n    selectFocusedDate() {\n      setValue(focusedDate);\n    },\n\n    selectDate(date) {\n      setValue(date);\n    },\n\n    isFocused: isFocused,\n    setFocused: setFocused,\n\n    isInvalid(date) {\n      return $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue);\n    },\n\n    isSelected(date) {\n      return calendarDateValue != null && $keQhS$isSameDay(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n    },\n\n    isCellFocused(date) {\n      return isFocused && focusedDate && $keQhS$isSameDay(date, focusedDate);\n    },\n\n    isCellDisabled(date) {\n      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date, minValue, maxValue);\n    },\n\n    isCellUnavailable(date) {\n      return props.isDateUnavailable && props.isDateUnavailable(date);\n    },\n\n    isPreviousVisibleRangeInvalid() {\n      let prev = startDate.subtract({\n        days: 1\n      });\n      return $keQhS$isSameDay(prev, startDate) || this.isInvalid(prev, minValue, maxValue);\n    },\n\n    isNextVisibleRangeInvalid() {\n      // Adding may return the same date if we reached the end of time\n      // according to the calendar system (e.g. 9999-12-31).\n      let next = endDate.add({\n        days: 1\n      });\n      return $keQhS$isSameDay(next, endDate) || this.isInvalid(next, minValue, maxValue);\n    },\n\n    getDatesInWeek(weekIndex) {\n      let from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startDate;\n      // let date = startOfWeek(from, locale);\n      let date = from.add({\n        weeks: weekIndex\n      });\n      let dates = [];\n      date = $keQhS$startOfWeek(date, locale); // startOfWeek will clamp dates within the calendar system's valid range, which may\n      // start in the middle of a week. In this case, add null placeholders.\n\n      let dayOfWeek = $keQhS$getDayOfWeek(date, locale);\n\n      for (let i = 0; i < dayOfWeek; i++) dates.push(null);\n\n      while (dates.length < 7) {\n        dates.push(date);\n        let nextDate = date.add({\n          days: 1\n        });\n        if ($keQhS$isSameDay(date, nextDate)) break;\n        date = nextDate;\n      } // Add null placeholders if at the end of the calendar system.\n\n\n      while (dates.length < 7) dates.push(null);\n\n      return dates;\n    }\n\n  };\n}\n\nfunction $131cf43a05231e1e$var$unitDuration(duration) {\n  let unit = { ...duration\n  };\n\n  for (let key in duration) unit[key] = 1;\n\n  return unit;\n}\n\nfunction $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(props) {\n  let {\n    value: valueProp,\n    defaultValue: defaultValue,\n    onChange: onChange,\n    createCalendar: createCalendar,\n    locale: locale,\n    visibleDuration = {\n      months: 1\n    },\n    minValue: minValue,\n    maxValue: maxValue,\n    ...calendarProps\n  } = props;\n  let [value, setValue] = $keQhS$useControlledState(valueProp, defaultValue || null, onChange);\n  let [anchorDate, setAnchorDateState] = $keQhS$useState(null);\n  let alignment = 'center';\n\n  if (value && value.start && value.end) {\n    let start = $f62d864046160412$export$f4a51ff076cc9a09($keQhS$toCalendarDate(value.start), visibleDuration, locale, minValue, maxValue);\n    let end = start.add(visibleDuration).subtract({\n      days: 1\n    });\n    if (value.end.compare(end) > 0) alignment = 'start';\n  } // Available range must be stored in a ref so we have access to the updated version immediately in `isInvalid`.\n\n\n  let availableRangeRef = $keQhS$useRef(null);\n  let [availableRange, setAvailableRange] = $keQhS$useState(null);\n  let min = $keQhS$useMemo(() => {\n    return $keQhS$maxDate(minValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.start);\n  }, [minValue, availableRange]);\n  let max = $keQhS$useMemo(() => {\n    return $keQhS$minDate(maxValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.end);\n  }, [maxValue, availableRange]);\n  let calendar = $131cf43a05231e1e$export$6d095e787d2b5e1f({ ...calendarProps,\n    value: value && value.start,\n    createCalendar: createCalendar,\n    locale: locale,\n    visibleDuration: visibleDuration,\n    minValue: min,\n    maxValue: max,\n    selectionAlignment: alignment\n  });\n\n  let updateAvailableRange = date => {\n    if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {\n      availableRangeRef.current = {\n        start: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, -1),\n        end: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, 1)\n      };\n      setAvailableRange(availableRangeRef.current);\n    } else {\n      availableRangeRef.current = null;\n      setAvailableRange(null);\n    }\n  }; // If the visible range changes, we need to update the available range.\n\n\n  let lastVisibleRange = $keQhS$useRef(calendar.visibleRange);\n\n  if (!$keQhS$isEqualDay(calendar.visibleRange.start, lastVisibleRange.current.start) || !$keQhS$isEqualDay(calendar.visibleRange.end, lastVisibleRange.current.end)) {\n    updateAvailableRange(anchorDate);\n    lastVisibleRange.current = calendar.visibleRange;\n  }\n\n  let setAnchorDate = date => {\n    if (date) {\n      setAnchorDateState(date);\n      updateAvailableRange(date);\n    } else {\n      setAnchorDateState(null);\n      updateAvailableRange(null);\n    }\n  };\n\n  let highlightedRange = anchorDate ? $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, calendar.focusedDate) : value && $9a36b6ba2fb1a7c5$var$makeRange(value.start, value.end);\n\n  let selectDate = date => {\n    if (props.isReadOnly) return;\n    date = $f62d864046160412$export$4f5203c0d889109e(date, min, max);\n    date = $f62d864046160412$export$a1d3911297b952d7(date, calendar.visibleRange.start, props.isDateUnavailable);\n    if (!date) return;\n    if (!anchorDate) setAnchorDate(date);else {\n      let range = $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, date);\n      setValue({\n        start: $9a36b6ba2fb1a7c5$var$convertValue(range.start, value === null || value === void 0 ? void 0 : value.start),\n        end: $9a36b6ba2fb1a7c5$var$convertValue(range.end, value === null || value === void 0 ? void 0 : value.end)\n      });\n      setAnchorDate(null);\n    }\n  };\n\n  let [isDragging, setDragging] = $keQhS$useState(false);\n  let {\n    isDateUnavailable: isDateUnavailable\n  } = props;\n  let isInvalidSelection = $keQhS$useMemo(() => {\n    if (!value || anchorDate) return false;\n    if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end))) return true;\n    return $f62d864046160412$export$eac50920cf2fd59a(value.start, minValue, maxValue) || $f62d864046160412$export$eac50920cf2fd59a(value.end, minValue, maxValue);\n  }, [isDateUnavailable, value, anchorDate, minValue, maxValue]);\n  let validationState = props.validationState || (isInvalidSelection ? 'invalid' : null);\n  return { ...calendar,\n    value: value,\n    setValue: setValue,\n    anchorDate: anchorDate,\n    setAnchorDate: setAnchorDate,\n    highlightedRange: highlightedRange,\n    validationState: validationState,\n\n    selectFocusedDate() {\n      selectDate(calendar.focusedDate);\n    },\n\n    selectDate: selectDate,\n\n    highlightDate(date) {\n      if (anchorDate) calendar.setFocusedDate(date);\n    },\n\n    isSelected(date) {\n      return highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date);\n    },\n\n    isInvalid(date) {\n      var ref, ref1;\n      return calendar.isInvalid(date) || $f62d864046160412$export$eac50920cf2fd59a(date, (ref = availableRangeRef.current) === null || ref === void 0 ? void 0 : ref.start, (ref1 = availableRangeRef.current) === null || ref1 === void 0 ? void 0 : ref1.end);\n    },\n\n    isDragging: isDragging,\n    setDragging: setDragging\n  };\n}\n\nfunction $9a36b6ba2fb1a7c5$var$makeRange(start, end) {\n  if (!start || !end) return null;\n  if (end.compare(start) < 0) [start, end] = [end, start];\n  return {\n    start: $keQhS$toCalendarDate(start),\n    end: $keQhS$toCalendarDate(end)\n  };\n}\n\nfunction $9a36b6ba2fb1a7c5$var$convertValue(newValue, oldValue) {\n  // The display calendar should not have any effect on the emitted value.\n  // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n  newValue = $keQhS$toCalendar(newValue, (oldValue === null || oldValue === void 0 ? void 0 : oldValue.calendar) || new $keQhS$GregorianCalendar()); // Preserve time if the input value had one.\n\n  if (oldValue && 'hour' in oldValue) return oldValue.set(newValue);\n  return newValue;\n}\n\nfunction $9a36b6ba2fb1a7c5$var$nextUnavailableDate(anchorDate, state, dir) {\n  let nextDate = anchorDate.add({\n    days: dir\n  });\n\n  while ((dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) && !state.isCellUnavailable(nextDate)) nextDate = nextDate.add({\n    days: dir\n  });\n\n  if (state.isCellUnavailable(nextDate)) return nextDate.add({\n    days: -dir\n  });\n  return null;\n}\n\nexport { $131cf43a05231e1e$export$6d095e787d2b5e1f as useCalendarState, $9a36b6ba2fb1a7c5$export$9a987164d97ecc90 as useRangeCalendarState };","map":{"version":3,"mappings":"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","names":["$f62d864046160412$export$eac50920cf2fd59a","date","minValue","maxValue","compare","$f62d864046160412$export$f4a51ff076cc9a09","duration","locale","halfDuration","key","Math","floor","aligned","$f62d864046160412$export$144a00ba6044eb9","subtract","$f62d864046160412$export$5bb865b12696a77d","years","$keQhS$startOfYear","months","$keQhS$startOfMonth","weeks","$keQhS$startOfWeek","$f62d864046160412$export$530edbfc915b2b04","d","days","$keQhS$maxDate","$keQhS$toCalendarDate","$keQhS$minDate","$f62d864046160412$export$4f5203c0d889109e","$f62d864046160412$export$a1d3911297b952d7","isDateUnavailable","$131cf43a05231e1e$export$6d095e787d2b5e1f","props","defaultFormatter","$keQhS$useMemo","$keQhS$DateFormatter","resolvedOptions","createCalendar","visibleDuration","selectionAlignment","calendar","value","setControlledValue","$keQhS$useControlledState","defaultValue","onChange","calendarDateValue","$keQhS$toCalendar","timeZone","focusedCalendarDate","focusedValue","undefined","defaultFocusedCalendarDate","defaultFocusedValue","$keQhS$today","focusedDate","setFocusedDate","onFocusChange","startDate","setStartDate","$keQhS$useState","isFocused","setFocused","autoFocus","endDate","add","lastCalendarIdentifier","$keQhS$useRef","identifier","current","newFocusedDate","focusCell","setValue","newValue","isDisabled","isReadOnly","$keQhS$GregorianCalendar","set","isUnavailable","validationState","visibleRange","start","end","focusNextDay","focusPreviousDay","focusNextRow","focusNextPage","focusPreviousRow","focusPreviousPage","focusSectionStart","focusSectionEnd","$keQhS$endOfWeek","$keQhS$endOfMonth","focusNextSection","larger","$131cf43a05231e1e$var$unitDuration","focusPreviousSection","selectFocusedDate","selectDate","isInvalid","isSelected","$keQhS$isSameDay","isCellDisabled","isCellUnavailable","isCellFocused","isPreviousVisibleRangeInvalid","prev","isNextVisibleRangeInvalid","next","getDatesInWeek","weekIndex","from","dates","dayOfWeek","$keQhS$getDayOfWeek","i","push","length","nextDate","unit","$9a36b6ba2fb1a7c5$export$9a987164d97ecc90","valueProp","calendarProps","anchorDate","setAnchorDateState","alignment","availableRangeRef","availableRange","setAvailableRange","min","max","updateAvailableRange","allowsNonContiguousRanges","$9a36b6ba2fb1a7c5$var$nextUnavailableDate","lastVisibleRange","$keQhS$isEqualDay","setAnchorDate","highlightedRange","$9a36b6ba2fb1a7c5$var$makeRange","range","$9a36b6ba2fb1a7c5$var$convertValue","isDragging","setDragging","isInvalidSelection","highlightDate","ref","ref1","oldValue","state","dir"],"sources":["/Users/rai/Desktop/go-packing-project/node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/utils.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/useCalendarState.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-stately/calendar/dist/packages/@react-stately/calendar/src/useRangeCalendarState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport {\n  CalendarDate,\n  DateDuration,\n  maxDate,\n  minDate,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  toCalendarDate\n} from '@internationalized/date';\nimport {DateValue} from '@react-types/calendar';\n\nexport function isInvalid(date: DateValue, minValue: DateValue, maxValue: DateValue) {\n  return (minValue != null && date.compare(minValue) < 0) ||\n    (maxValue != null && date.compare(maxValue) > 0);\n}\n\nexport function alignCenter(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  let halfDuration: DateDuration = {};\n  for (let key in duration) {\n    halfDuration[key] = Math.floor(duration[key] / 2);\n    if (halfDuration[key] > 0 && duration[key] % 2 === 0) {\n      halfDuration[key]--;\n    }\n  }\n\n  let aligned = alignStart(date, duration, locale).subtract(halfDuration);\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function alignStart(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  // align to the start of the largest unit\n  let aligned = date;\n  if (duration.years) {\n    aligned = startOfYear(date);\n  } else if (duration.months) {\n    aligned = startOfMonth(date);\n  } else if (duration.weeks) {\n    aligned = startOfWeek(date, locale);\n  }\n\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function alignEnd(date: CalendarDate, duration: DateDuration, locale: string, minValue?: DateValue, maxValue?: DateValue) {\n  let d = {...duration};\n  // subtract 1 from the smallest unit\n  if (duration.days) {\n    d.days--;\n  } else if (duration.weeks) {\n    d.weeks--;\n  } else if (duration.months) {\n    d.months--;\n  } else if (duration.years) {\n    d.years--;\n  }\n\n  let aligned = alignStart(date, duration, locale).subtract(d);\n  return constrainStart(date, aligned, duration, locale, minValue, maxValue);\n}\n\nexport function constrainStart(\n  date: CalendarDate,\n  aligned: CalendarDate,\n  duration: DateDuration,\n  locale: string,\n  minValue: DateValue,\n  maxValue: DateValue) {\n  if (minValue && date.compare(minValue) >= 0) {\n    aligned = maxDate(\n      aligned,\n      alignStart(toCalendarDate(minValue), duration, locale)\n    );\n  }\n\n  if (maxValue && date.compare(maxValue) <= 0) {\n    aligned = minDate(\n      aligned,\n      alignEnd(toCalendarDate(maxValue), duration, locale)\n    );\n  }\n\n  return aligned;\n}\n\nexport function constrainValue(date: CalendarDate, minValue: DateValue, maxValue: DateValue) {\n  if (minValue) {\n    date = maxDate(date, toCalendarDate(minValue));\n  }\n\n  if (maxValue) {\n    date = minDate(date, toCalendarDate(maxValue));\n  }\n\n  return date;\n}\n\nexport function previousAvailableDate(date: CalendarDate, minValue: DateValue, isDateUnavailable: (date: CalendarDate) => boolean) {\n  if (!isDateUnavailable) {\n    return date;\n  }\n\n  while (date.compare(minValue) >= 0 && isDateUnavailable(date)) {\n    date = date.subtract({days: 1});\n  }\n\n  if (date.compare(minValue) >= 0) {\n    return date;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {alignCenter, alignEnd, alignStart, constrainStart, constrainValue, isInvalid, previousAvailableDate} from './utils';\nimport {\n  Calendar,\n  CalendarDate,\n  DateDuration,\n  DateFormatter,\n  endOfMonth,\n  endOfWeek,\n  getDayOfWeek,\n  GregorianCalendar,\n  isSameDay,\n  startOfMonth,\n  startOfWeek,\n  toCalendar,\n  toCalendarDate,\n  today\n} from '@internationalized/date';\nimport {CalendarProps, DateValue} from '@react-types/calendar';\nimport {CalendarState} from './types';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useRef, useState} from 'react';\n\nexport interface CalendarStateOptions extends CalendarProps<DateValue> {\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar,\n  /**\n   * The amount of days that will be displayed at once. This affects how pagination works.\n   * @default {months: 1}\n   */\n  visibleDuration?: DateDuration,\n  /** Determines how to align the initial selection relative to the visible date range. */\n  selectionAlignment?: 'start' | 'center' | 'end'\n}\n\n/**\n * Provides state management for a calendar component.\n * A calendar displays one or more date grids and allows users to select a single date.\n */\nexport function useCalendarState(props: CalendarStateOptions): CalendarState {\n  let defaultFormatter = useMemo(() => new DateFormatter(props.locale), [props.locale]);\n  let resolvedOptions = useMemo(() => defaultFormatter.resolvedOptions(), [defaultFormatter]);\n  let {\n    locale,\n    createCalendar,\n    visibleDuration = {months: 1},\n    minValue,\n    maxValue,\n    selectionAlignment,\n    isDateUnavailable\n  } = props;\n\n  let calendar = useMemo(() => createCalendar(resolvedOptions.calendar), [createCalendar, resolvedOptions.calendar]);\n\n  let [value, setControlledValue] = useControlledState<DateValue>(props.value, props.defaultValue, props.onChange);\n  let calendarDateValue = useMemo(() => value ? toCalendar(toCalendarDate(value), calendar) : null, [value, calendar]);\n  let timeZone = useMemo(() => value && 'timeZone' in value ? value.timeZone : resolvedOptions.timeZone, [value, resolvedOptions.timeZone]);\n  let focusedCalendarDate = useMemo(() => (\n    props.focusedValue\n      ? constrainValue(toCalendar(toCalendarDate(props.focusedValue), calendar), minValue, maxValue)\n      : undefined\n  ), [props.focusedValue, calendar, minValue, maxValue]);\n  let defaultFocusedCalendarDate = useMemo(() => (\n    constrainValue(\n      props.defaultFocusedValue\n        ? toCalendar(toCalendarDate(props.defaultFocusedValue), calendar)\n        : calendarDateValue || toCalendar(today(timeZone), calendar),\n      minValue,\n      maxValue\n    )\n  ), [props.defaultFocusedValue, calendarDateValue, timeZone, calendar, minValue, maxValue]);\n  let [focusedDate, setFocusedDate] = useControlledState(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);\n  let [startDate, setStartDate] = useState(() => {\n    switch (selectionAlignment) {\n      case 'start':\n        return alignStart(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'end':\n        return alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue);\n      case 'center':\n      default:\n        return alignCenter(focusedDate, visibleDuration, locale, minValue, maxValue);\n    }\n  });\n  let [isFocused, setFocused] = useState(props.autoFocus || false);\n\n  let endDate = useMemo(() => {\n    let duration = {...visibleDuration};\n    if (duration.days) {\n      duration.days--;\n    } else {\n      duration.days = -1;\n    }\n    return startDate.add(duration);\n  }, [startDate, visibleDuration]);\n\n  // Reset focused date and visible range when calendar changes.\n  let lastCalendarIdentifier = useRef(calendar.identifier);\n  if (calendar.identifier !== lastCalendarIdentifier.current) {\n    let newFocusedDate = toCalendar(focusedDate, calendar);\n    setStartDate(alignCenter(newFocusedDate, visibleDuration, locale, minValue, maxValue));\n    setFocusedDate(newFocusedDate);\n    lastCalendarIdentifier.current = calendar.identifier;\n  }\n\n  if (isInvalid(focusedDate, minValue, maxValue)) {\n    // If the focused date was moved to an invalid value, it can't be focused, so constrain it.\n    setFocusedDate(constrainValue(focusedDate, minValue, maxValue));\n  } else if (focusedDate.compare(startDate) < 0) {\n    setStartDate(alignEnd(focusedDate, visibleDuration, locale, minValue, maxValue));\n  } else if (focusedDate.compare(endDate) > 0) {\n    setStartDate(alignStart(focusedDate, visibleDuration, locale, minValue, maxValue));\n  }\n\n  // Sets focus to a specific cell date\n  function focusCell(date: CalendarDate) {\n    date = constrainValue(date, minValue, maxValue);\n    setFocusedDate(date);\n  }\n\n  function setValue(newValue: CalendarDate) {\n    if (!props.isDisabled && !props.isReadOnly) {\n      newValue = constrainValue(newValue, minValue, maxValue);\n      newValue = previousAvailableDate(newValue, startDate, isDateUnavailable);\n      if (!newValue) {\n        return;\n      }\n\n      // The display calendar should not have any effect on the emitted value.\n      // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n      newValue = toCalendar(newValue, value?.calendar || new GregorianCalendar());\n\n      // Preserve time if the input value had one.\n      if (value && 'hour' in value) {\n        setControlledValue(value.set(newValue));\n      } else {\n        setControlledValue(newValue);\n      }\n    }\n  }\n\n  let isUnavailable = useMemo(() => {\n    if (!calendarDateValue) {\n      return false;\n    }\n\n    if (isDateUnavailable && isDateUnavailable(calendarDateValue)) {\n      return true;\n    }\n\n    return isInvalid(calendarDateValue, minValue, maxValue);\n  }, [calendarDateValue, isDateUnavailable, minValue, maxValue]);\n  let validationState = props.validationState || (isUnavailable ? 'invalid' : null);\n\n  return {\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    value: calendarDateValue,\n    setValue,\n    visibleRange: {\n      start: startDate,\n      end: endDate\n    },\n    minValue,\n    maxValue,\n    focusedDate,\n    timeZone,\n    validationState,\n    setFocusedDate(date) {\n      focusCell(date);\n      setFocused(true);\n    },\n    focusNextDay() {\n      focusCell(focusedDate.add({days: 1}));\n    },\n    focusPreviousDay() {\n      focusCell(focusedDate.subtract({days: 1}));\n    },\n    focusNextRow() {\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({weeks: 1}));\n      }\n    },\n    focusPreviousRow() {\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({weeks: 1}));\n      }\n    },\n    focusNextPage() {\n      let start = startDate.add(visibleDuration);\n      setFocusedDate(constrainValue(focusedDate.add(visibleDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, visibleDuration, locale, minValue, maxValue),\n          visibleDuration,\n          locale\n        )\n      );\n    },\n    focusPreviousPage() {\n      let start = startDate.subtract(visibleDuration);\n      setFocusedDate(constrainValue(focusedDate.subtract(visibleDuration), minValue, maxValue));\n      setStartDate(\n        alignStart(\n          constrainStart(focusedDate, start, visibleDuration, locale, minValue, maxValue),\n          visibleDuration,\n          locale\n        )\n      );\n    },\n    focusSectionStart() {\n      if (visibleDuration.days) {\n        focusCell(startDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(startOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(startOfMonth(focusedDate));\n      }\n    },\n    focusSectionEnd() {\n      if (visibleDuration.days) {\n        focusCell(endDate);\n      } else if (visibleDuration.weeks) {\n        focusCell(endOfWeek(focusedDate, locale));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(endOfMonth(focusedDate));\n      }\n    },\n    focusNextSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.add(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusNextPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.add({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.add({years: 1}));\n      }\n    },\n    focusPreviousSection(larger) {\n      if (!larger && !visibleDuration.days) {\n        focusCell(focusedDate.subtract(unitDuration(visibleDuration)));\n        return;\n      }\n\n      if (visibleDuration.days) {\n        this.focusPreviousPage();\n      } else if (visibleDuration.weeks) {\n        focusCell(focusedDate.subtract({months: 1}));\n      } else if (visibleDuration.months || visibleDuration.years) {\n        focusCell(focusedDate.subtract({years: 1}));\n      }\n    },\n    selectFocusedDate() {\n      setValue(focusedDate);\n    },\n    selectDate(date) {\n      setValue(date);\n    },\n    isFocused,\n    setFocused,\n    isInvalid(date) {\n      return isInvalid(date, minValue, maxValue);\n    },\n    isSelected(date) {\n      return calendarDateValue != null && isSameDay(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);\n    },\n    isCellFocused(date) {\n      return isFocused && focusedDate && isSameDay(date, focusedDate);\n    },\n    isCellDisabled(date) {\n      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date, minValue, maxValue);\n    },\n    isCellUnavailable(date) {\n      return props.isDateUnavailable && props.isDateUnavailable(date);\n    },\n    isPreviousVisibleRangeInvalid() {\n      let prev = startDate.subtract({days: 1});\n      return isSameDay(prev, startDate) || this.isInvalid(prev, minValue, maxValue);\n    },\n    isNextVisibleRangeInvalid() {\n      // Adding may return the same date if we reached the end of time\n      // according to the calendar system (e.g. 9999-12-31).\n      let next = endDate.add({days: 1});\n      return isSameDay(next, endDate) || this.isInvalid(next, minValue, maxValue);\n    },\n    getDatesInWeek(weekIndex, from = startDate) {\n      // let date = startOfWeek(from, locale);\n      let date = from.add({weeks: weekIndex});\n      let dates = [];\n\n      date = startOfWeek(date, locale);\n\n      // startOfWeek will clamp dates within the calendar system's valid range, which may\n      // start in the middle of a week. In this case, add null placeholders.\n      let dayOfWeek = getDayOfWeek(date, locale);\n      for (let i = 0; i < dayOfWeek; i++) {\n        dates.push(null);\n      }\n\n      while (dates.length < 7) {\n        dates.push(date);\n        let nextDate = date.add({days: 1});\n        if (isSameDay(date, nextDate)) {\n          // If the next day is the same, we have hit the end of the calendar system.\n          break;\n        }\n        date = nextDate;\n      }\n\n      // Add null placeholders if at the end of the calendar system.\n      while (dates.length < 7) {\n        dates.push(null);\n      }\n\n      return dates;\n    }\n  };\n}\n\nfunction unitDuration(duration: DateDuration) {\n  let unit = {...duration};\n  for (let key in duration) {\n    unit[key] = 1;\n  }\n  return unit;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {alignCenter, constrainValue, isInvalid, previousAvailableDate} from './utils';\nimport {Calendar, CalendarDate, DateDuration, GregorianCalendar, isEqualDay, maxDate, minDate, toCalendar, toCalendarDate} from '@internationalized/date';\nimport {CalendarState, RangeCalendarState} from './types';\nimport {DateRange, DateValue} from '@react-types/calendar';\nimport {RangeCalendarProps} from '@react-types/calendar';\nimport {RangeValue} from '@react-types/shared';\nimport {useCalendarState} from './useCalendarState';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useRef, useState} from 'react';\n\nexport interface RangeCalendarStateOptions extends RangeCalendarProps<DateValue> {\n  /** The locale to display and edit the value according to. */\n  locale: string,\n  /**\n   * A function that creates a [Calendar](../internationalized/date/Calendar.html)\n   * object for a given calendar identifier. Such a function may be imported from the\n   * `@internationalized/date` package, or manually implemented to include support for\n   * only certain calendars.\n   */\n  createCalendar: (name: string) => Calendar,\n  /**\n   * The amount of days that will be displayed at once. This affects how pagination works.\n   * @default {months: 1}\n   */\n  visibleDuration?: DateDuration\n}\n\n/**\n * Provides state management for a range calendar component.\n * A range calendar displays one or more date grids and allows users to select a contiguous range of dates.\n */\nexport function useRangeCalendarState(props: RangeCalendarStateOptions): RangeCalendarState {\n  let {value: valueProp, defaultValue, onChange, createCalendar, locale, visibleDuration = {months: 1}, minValue, maxValue, ...calendarProps} = props;\n  let [value, setValue] = useControlledState<DateRange>(\n    valueProp,\n    defaultValue || null,\n    onChange\n  );\n\n  let [anchorDate, setAnchorDateState] = useState(null);\n  let alignment: 'center' | 'start' = 'center';\n  if (value && value.start && value.end) {\n    let start = alignCenter(toCalendarDate(value.start), visibleDuration, locale, minValue, maxValue);\n    let end = start.add(visibleDuration).subtract({days: 1});\n\n    if (value.end.compare(end) > 0) {\n      alignment = 'start';\n    }\n  }\n\n  // Available range must be stored in a ref so we have access to the updated version immediately in `isInvalid`.\n  let availableRangeRef = useRef<RangeValue<DateValue>>(null);\n  let [availableRange, setAvailableRange] = useState<RangeValue<DateValue>>(null);\n  let min = useMemo(() => maxDate(minValue, availableRange?.start), [minValue, availableRange]);\n  let max = useMemo(() => minDate(maxValue, availableRange?.end), [maxValue, availableRange]);\n\n  let calendar = useCalendarState({\n    ...calendarProps,\n    value: value && value.start,\n    createCalendar,\n    locale,\n    visibleDuration,\n    minValue: min,\n    maxValue: max,\n    selectionAlignment: alignment\n  });\n\n  let updateAvailableRange = (date) => {\n    if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {\n      availableRangeRef.current = {\n        start: nextUnavailableDate(date, calendar, -1),\n        end: nextUnavailableDate(date, calendar, 1)\n      };\n      setAvailableRange(availableRangeRef.current);\n    } else {\n      availableRangeRef.current = null;\n      setAvailableRange(null);\n    }\n  };\n\n  // If the visible range changes, we need to update the available range.\n  let lastVisibleRange = useRef(calendar.visibleRange);\n  if (!isEqualDay(calendar.visibleRange.start, lastVisibleRange.current.start) || !isEqualDay(calendar.visibleRange.end, lastVisibleRange.current.end)) {\n    updateAvailableRange(anchorDate);\n    lastVisibleRange.current = calendar.visibleRange;\n  }\n\n  let setAnchorDate = (date: CalendarDate) => {\n    if (date) {\n      setAnchorDateState(date);\n      updateAvailableRange(date);\n    } else {\n      setAnchorDateState(null);\n      updateAvailableRange(null);\n    }\n  };\n\n  let highlightedRange = anchorDate ? makeRange(anchorDate, calendar.focusedDate) : value && makeRange(value.start, value.end);\n  let selectDate = (date: CalendarDate) => {\n    if (props.isReadOnly) {\n      return;\n    }\n\n    date = constrainValue(date, min, max);\n    date = previousAvailableDate(date, calendar.visibleRange.start, props.isDateUnavailable);\n    if (!date) {\n      return;\n    }\n\n    if (!anchorDate) {\n      setAnchorDate(date);\n    } else {\n      let range = makeRange(anchorDate, date);\n      setValue({\n        start: convertValue(range.start, value?.start),\n        end: convertValue(range.end, value?.end)\n      });\n      setAnchorDate(null);\n    }\n  };\n\n  let [isDragging, setDragging] = useState(false);\n\n  let {isDateUnavailable} = props;\n  let isInvalidSelection = useMemo(() => {\n    if (!value || anchorDate) {\n      return false;\n    }\n\n    if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end))) {\n      return true;\n    }\n\n    return isInvalid(value.start, minValue, maxValue) || isInvalid(value.end, minValue, maxValue);\n  }, [isDateUnavailable, value, anchorDate, minValue, maxValue]);\n\n  let validationState = props.validationState || (isInvalidSelection ? 'invalid' : null);\n\n  return {\n    ...calendar,\n    value,\n    setValue,\n    anchorDate,\n    setAnchorDate,\n    highlightedRange,\n    validationState,\n    selectFocusedDate() {\n      selectDate(calendar.focusedDate);\n    },\n    selectDate,\n    highlightDate(date) {\n      if (anchorDate) {\n        calendar.setFocusedDate(date);\n      }\n    },\n    isSelected(date) {\n      return highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date);\n    },\n    isInvalid(date) {\n      return calendar.isInvalid(date) || isInvalid(date, availableRangeRef.current?.start, availableRangeRef.current?.end);\n    },\n    isDragging,\n    setDragging\n  };\n}\n\nfunction makeRange(start: DateValue, end: DateValue): RangeValue<CalendarDate> {\n  if (!start || !end) {\n    return null;\n  }\n\n  if (end.compare(start) < 0) {\n    [start, end] = [end, start];\n  }\n\n  return {start: toCalendarDate(start), end: toCalendarDate(end)};\n}\n\nfunction convertValue(newValue: CalendarDate, oldValue: DateValue) {\n  // The display calendar should not have any effect on the emitted value.\n  // Emit dates in the same calendar as the original value, if any, otherwise gregorian.\n  newValue = toCalendar(newValue, oldValue?.calendar || new GregorianCalendar());\n\n  // Preserve time if the input value had one.\n  if (oldValue && 'hour' in oldValue) {\n    return oldValue.set(newValue);\n  }\n\n  return newValue;\n}\n\nfunction nextUnavailableDate(anchorDate: CalendarDate, state: CalendarState, dir: number) {\n  let nextDate = anchorDate.add({days: dir});\n  while (\n    (dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) &&\n    !state.isCellUnavailable(nextDate)\n  ) {\n    nextDate = nextDate.add({days: dir});\n  }\n\n  if (state.isCellUnavailable(nextDate)) {\n    return nextDate.add({days: -dir});\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}