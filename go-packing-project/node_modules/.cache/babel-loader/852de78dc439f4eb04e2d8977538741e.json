{"ast":null,"code":"var _jsxFileName = \"/Users/rai/Desktop/go-packing-project/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport \"./Home.css\";\nimport Location from \"../components/location/Location\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"../api\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport DateRange from \"../components/date-range/DateRange\";\nimport Activities from \"../components/activities/Activities\";\nimport StyleChoice from \"../components/style-choice/StyleChoice\";\nimport moment from \"moment\";\nimport CurrentWeather from \"../components/current-weather/CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"../components/header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [ComboBox, setActivities] = useState(null);\n  const [locationCoordinates, setLocationCoordinates] = useState(\"coords here\"); // Set the startDate and endDate\n\n  const storeDates = (start, end) => {\n    setStartDate(start);\n    setEndDate(end);\n  }; // change date format for API endpont call\n\n\n  const startDateFormated = moment(`${startDate}`).format(\"YYYY-MM-DD\");\n  const endDateFormated = moment(`${endDate}`).format(\"YYYY-MM-DD\"); // Set activities choice\n\n  const storeActivities = activities => {\n    setActivities(activities);\n    console.log(`Activities ${ComboBox}`);\n  }; // Set location coordinates\n\n\n  const storeCoordinates = coords => {\n    console.log(\"Setting coords\");\n    setLocationCoordinates(coords);\n    console.log(locationCoordinates);\n  }; // stop page from reloading on button click\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Submit clicked\");\n    weatherApiCall(); // console.log(forecast);\n  };\n\n  const weatherApiCall = () => {\n    console.log(\"calling api\"); //Don't attempt to call API until dates are input in calendar\n\n    if (startDate && endDate != null) {\n      //Split value of latitude and longitude  for later use\n      const [lat, lon] = locationCoordinates.value.split(\" \"); // Weather API endpoint\n\n      const currentWeatherFetch = fetch(`${WEATHER_API_URL}/timeline/${lat},${lon}?unitGroup=metric&key=${WEATHER_API_KEY}`);\n      const forecastFetch = fetch(`${WEATHER_API_URL}/timeline/${lat},${lon}/${startDateFormated}/${endDateFormated}?unitGroup=metric&key=${WEATHER_API_KEY}`);\n      Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n        setCurrentWeather({\n          city: locationCoordinates.label,\n          ...weatherResponse\n        });\n        setForecast({\n          city: locationCoordinates.label,\n          ...forecastResponse\n        });\n      }).catch(err => console.log(err));\n    }\n  };\n\n  if (startDateFormated && endDateFormated != null) {\n    console.log(currentWeather);\n    console.log(forecast);\n  } //displays API results in console but only if dates entered before location\n  //home page form\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Discover what to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"pack for your holiday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Location, {\n          weatherApiCall: weatherApiCall,\n          storeCoordinates: storeCoordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DateRange, {\n          storeDates: storeDates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Activities, {\n          storeActivities: storeActivities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StyleChoice, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit-button\",\n          onSubmit: handleSubmit,\n          children: \"Create my List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Un1JOPcYLptPCCgKa10zPj/C7jY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Location","WEATHER_API_URL","WEATHER_API_KEY","useState","Form","DateRange","Activities","StyleChoice","moment","CurrentWeather","Header","App","currentWeather","setCurrentWeather","forecast","setForecast","startDate","setStartDate","endDate","setEndDate","ComboBox","setActivities","locationCoordinates","setLocationCoordinates","storeDates","start","end","startDateFormated","format","endDateFormated","storeActivities","activities","console","log","storeCoordinates","coords","handleSubmit","event","preventDefault","weatherApiCall","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err"],"sources":["/Users/rai/Desktop/go-packing-project/src/pages/Home.js"],"sourcesContent":["import \"./Home.css\";\n\nimport Location from \"../components/location/Location\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"../api\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\";\nimport DateRange from \"../components/date-range/DateRange\";\nimport Activities from \"../components/activities/Activities\";\nimport StyleChoice from \"../components/style-choice/StyleChoice\";\nimport moment from \"moment\";\nimport CurrentWeather from \"../components/current-weather/CurrentWeather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"../components/header/Header\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [ComboBox, setActivities] = useState(null);\n  const [locationCoordinates, setLocationCoordinates] = useState(\"coords here\");\n\n  // Set the startDate and endDate\n  const storeDates = (start, end) => {\n    setStartDate(start);\n    setEndDate(end);\n  };\n\n  // change date format for API endpont call\n  const startDateFormated = moment(`${startDate}`).format(\"YYYY-MM-DD\");\n  const endDateFormated = moment(`${endDate}`).format(\"YYYY-MM-DD\");\n\n  // Set activities choice\n  const storeActivities = (activities) => {\n    setActivities(activities);\n    console.log(`Activities ${ComboBox}`);\n  };\n\n  // Set location coordinates\n  const storeCoordinates = (coords) => {\n    console.log(\"Setting coords\");\n    setLocationCoordinates(coords);\n    console.log(locationCoordinates);\n  };\n\n  // stop page from reloading on button click\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submit clicked\");\n    weatherApiCall();\n    // console.log(forecast);\n  };\n\n  const weatherApiCall = () => {\n    console.log(\"calling api\");\n    //Don't attempt to call API until dates are input in calendar\n    if (startDate && endDate != null) {\n      //Split value of latitude and longitude  for later use\n      const [lat, lon] = locationCoordinates.value.split(\" \");\n\n      // Weather API endpoint\n      const currentWeatherFetch = fetch(\n        `${WEATHER_API_URL}/timeline/${lat},${lon}?unitGroup=metric&key=${WEATHER_API_KEY}`\n      );\n      const forecastFetch = fetch(\n        `${WEATHER_API_URL}/timeline/${lat},${lon}/${startDateFormated}/${endDateFormated}?unitGroup=metric&key=${WEATHER_API_KEY}`\n      );\n\n      Promise.all([currentWeatherFetch, forecastFetch])\n        .then(async (response) => {\n          const weatherResponse = await response[0].json();\n          const forecastResponse = await response[1].json();\n\n          setCurrentWeather({\n            city: locationCoordinates.label,\n            ...weatherResponse,\n          });\n          setForecast({ city: locationCoordinates.label, ...forecastResponse });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  if (startDateFormated && endDateFormated != null) {\n    console.log(currentWeather);\n    console.log(forecast);\n  }\n\n  //displays API results in console but only if dates entered before location\n\n  //home page form\n  return (\n    <>\n      <Header />\n      <div className=\"Welcome\">\n        <h1>Discover what to</h1>\n        <h1>pack for your holiday</h1>\n      </div>\n\n      <Form onSubmit={handleSubmit} id=\"form\">\n        {/* choose city */}\n        <div>\n          <Location\n            weatherApiCall={weatherApiCall}\n            storeCoordinates={storeCoordinates}\n          />\n        </div>\n\n        {/* date range picker */}\n        <div>\n          <DateRange storeDates={storeDates} />\n        </div>\n\n        {/* activities dropdown */}\n        <div>\n          <Activities storeActivities={storeActivities} />\n        </div>\n\n        {/* style dropdown */}\n        <div>\n          <StyleChoice />\n        </div>\n        <div className=\"submit-button-container\">\n          <button id=\"submit-button\" onSubmit={handleSubmit}>\n            Create my List\n          </button>\n        </div>\n      </Form>\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}