{"ast":null,"code":"import { useLayoutEffect as $kSaV5$useLayoutEffect, mergeProps as $kSaV5$mergeProps, focusWithoutScrolling as $kSaV5$focusWithoutScrolling, useResizeObserver as $kSaV5$useResizeObserver } from \"@react-aria/utils\";\nimport { getInteractionModality as $kSaV5$getInteractionModality } from \"@react-aria/interactions\";\nimport { useVirtualizerState as $kSaV5$useVirtualizerState, Rect as $kSaV5$Rect, Size as $kSaV5$Size } from \"@react-stately/virtualizer\";\nimport $kSaV5$react, { useRef as $kSaV5$useRef, useCallback as $kSaV5$useCallback, useEffect as $kSaV5$useEffect, useState as $kSaV5$useState } from \"react\";\nimport { flushSync as $kSaV5$flushSync } from \"react-dom\";\nimport { useLocale as $kSaV5$useLocale } from \"@react-aria/i18n\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $6d0a5c394373ae64$exports = {};\n$parcel$export($6d0a5c394373ae64$exports, \"useVirtualizer\", () => $6d0a5c394373ae64$export$dd6d526d88b5a137);\n$parcel$export($6d0a5c394373ae64$exports, \"Virtualizer\", () => $6d0a5c394373ae64$export$89be5a243e59c4b2);\nvar $44a6ee657928b002$exports = {};\n$parcel$export($44a6ee657928b002$exports, \"ScrollView\", () => $44a6ee657928b002$export$5665e3d6be6adea);\nvar $ce415dc67314b753$exports = {};\n$parcel$export($ce415dc67314b753$exports, \"getRTLOffsetType\", () => $ce415dc67314b753$export$faf7630257ad4304);\n$parcel$export($ce415dc67314b753$exports, \"getScrollLeft\", () => $ce415dc67314b753$export$1389d168952b34b5);\n$parcel$export($ce415dc67314b753$exports, \"setScrollLeft\", () => $ce415dc67314b753$export$ed5fd5ffe5ab0ac);\nlet $ce415dc67314b753$var$cachedRTLResult = null;\n\nfunction $ce415dc67314b753$export$faf7630257ad4304() {\n  let recalculate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if ($ce415dc67314b753$var$cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n    if (outerDiv.scrollLeft > 0) $ce415dc67314b753$var$cachedRTLResult = 'positive-descending';else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) $ce415dc67314b753$var$cachedRTLResult = 'negative';else $ce415dc67314b753$var$cachedRTLResult = 'positive-ascending';\n    }\n    document.body.removeChild(outerDiv);\n    return $ce415dc67314b753$var$cachedRTLResult;\n  }\n\n  return $ce415dc67314b753$var$cachedRTLResult;\n}\n\nfunction $ce415dc67314b753$export$1389d168952b34b5(node, direction) {\n  let {\n    scrollLeft: scrollLeft\n  } = node; // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n\n  if (direction === 'rtl') {\n    let {\n      scrollWidth: scrollWidth,\n      clientWidth: clientWidth\n    } = node;\n\n    switch ($ce415dc67314b753$export$faf7630257ad4304()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\n\nfunction $ce415dc67314b753$export$ed5fd5ffe5ab0ac(node, direction, scrollLeft) {\n  if (direction === 'rtl') switch ($ce415dc67314b753$export$faf7630257ad4304()) {\n    case 'negative':\n      scrollLeft = -scrollLeft;\n      break;\n\n    case 'positive-ascending':\n      break;\n\n    default:\n      {\n        const {\n          clientWidth: clientWidth,\n          scrollWidth: scrollWidth\n        } = node;\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n      }\n  }\n  node.scrollLeft = scrollLeft;\n}\n\nfunction $44a6ee657928b002$var$ScrollView(props, ref) {\n  let {\n    contentSize: contentSize,\n    onVisibleRectChange: onVisibleRectChange,\n    children: children,\n    innerStyle: innerStyle,\n    sizeToFit: sizeToFit,\n    onScrollStart: onScrollStart,\n    onScrollEnd: onScrollEnd,\n    scrollDirection = 'both',\n    ...otherProps\n  } = props;\n  let defaultRef = $kSaV5$useRef();\n  ref = ref || defaultRef;\n  let state = $kSaV5$useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {\n    direction: direction\n  } = $kSaV5$useLocale();\n  let [isScrolling, setScrolling] = $kSaV5$useState(false);\n  let onScroll = $kSaV5$useCallback(e => {\n    if (e.target !== e.currentTarget) return;\n    if (props.onScroll) props.onScroll(e);\n    $kSaV5$flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = $ce415dc67314b753$export$1389d168952b34b5(e.currentTarget, direction); // Prevent rubber band scrolling from shaking when scrolling out of bounds\n\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n      onVisibleRectChange(new $kSaV5$Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n        if (onScrollStart) onScrollStart();\n      } // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n\n\n      let now = Date.now();\n\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n          if (onScrollEnd) onScrollEnd();\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]); // eslint-disable-next-line arrow-body-style\n\n  $kSaV5$useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  }, []);\n  let updateSize = $kSaV5$useCallback(() => {\n    let dom = ref.current;\n    if (!dom) return;\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') w = Math.min(w, contentSize.width);else if (sizeToFit === 'height') h = Math.min(h, contentSize.height);\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new $kSaV5$Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n  $kSaV5$useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  $kSaV5$useResizeObserver({\n    ref: ref,\n    onResize: updateSize\n  });\n  let style = {\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0,\n    ...otherProps.style\n  };\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical') {\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else style.overflow = 'auto';\n\n  return /*#__PURE__*/$kSaV5$react.createElement(\"div\", { ...otherProps,\n    style: style,\n    ref: ref,\n    onScroll: onScroll\n  }, /*#__PURE__*/$kSaV5$react.createElement(\"div\", {\n    role: \"presentation\",\n    style: {\n      width: contentSize.width,\n      height: contentSize.height,\n      pointerEvents: isScrolling ? 'none' : 'auto',\n      position: 'relative',\n      ...innerStyle\n    }\n  }, children));\n}\n\nconst $44a6ee657928b002$export$5665e3d6be6adea = /*#__PURE__*/$kSaV5$react.forwardRef($44a6ee657928b002$var$ScrollView);\nvar $ccf8a0a04e4175ae$exports = {};\n$parcel$export($ccf8a0a04e4175ae$exports, \"VirtualizerItem\", () => $ccf8a0a04e4175ae$export$6796df8ba7398521);\n$parcel$export($ccf8a0a04e4175ae$exports, \"layoutInfoToStyle\", () => $ccf8a0a04e4175ae$export$1481e64fbe01b8b3);\nvar $47736c1e63ba1c6d$exports = {};\n$parcel$export($47736c1e63ba1c6d$exports, \"useVirtualizerItem\", () => $47736c1e63ba1c6d$export$1da781778207e0a2);\n\nfunction $47736c1e63ba1c6d$export$1da781778207e0a2(options) {\n  let {\n    reusableView: {\n      layoutInfo: layoutInfo,\n      virtualizer: virtualizer\n    },\n    ref: ref\n  } = options;\n  let updateSize = $kSaV5$useCallback(() => {\n    let size = $47736c1e63ba1c6d$var$getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n  $kSaV5$useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) updateSize();\n  });\n  return {\n    updateSize: updateSize\n  };\n}\n\nfunction $47736c1e63ba1c6d$var$getSize(node) {\n  // Reset height before measuring so we get the intrinsic size\n  let height = node.style.height;\n  node.style.height = '';\n  let size = new $kSaV5$Size(node.scrollWidth, node.scrollHeight);\n  node.style.height = height;\n  return size;\n}\n\nfunction $ccf8a0a04e4175ae$export$6796df8ba7398521(props) {\n  let {\n    className: className,\n    reusableView: reusableView,\n    parent: parent\n  } = props;\n  let {\n    direction: direction\n  } = $kSaV5$useLocale();\n  let ref = $kSaV5$useRef();\n  $47736c1e63ba1c6d$export$1da781778207e0a2({\n    reusableView: reusableView,\n    ref: ref\n  });\n  return /*#__PURE__*/$kSaV5$react.createElement(\"div\", {\n    role: \"presentation\",\n    ref: ref,\n    className: className,\n    style: $ccf8a0a04e4175ae$export$1481e64fbe01b8b3(reusableView.layoutInfo, direction, parent && parent.layoutInfo)\n  }, reusableView.rendered);\n}\n\nlet $ccf8a0a04e4175ae$var$cache = new WeakMap();\n\nfunction $ccf8a0a04e4175ae$export$1481e64fbe01b8b3(layoutInfo, dir, parent) {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = $ccf8a0a04e4175ae$var$cache.get(layoutInfo);\n\n  if (cached && cached[xProperty] != null) {\n    if (!parent) return cached; // Invalidate if the parent position changed.\n\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n    if (cached.top === top && cached[xProperty] === x) return cached;\n  }\n\n  let style = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    overflow: layoutInfo.allowOverflow ? 'visible' : 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style'\n  };\n  $ccf8a0a04e4175ae$var$cache.set(layoutInfo, style);\n  return style;\n}\n\nfunction $6d0a5c394373ae64$var$Virtualizer(props, ref) {\n  let {\n    children: renderView,\n    renderWrapper: renderWrapper,\n    layout: layout,\n    collection: collection,\n    sizeToFit: sizeToFit,\n    scrollDirection: scrollDirection,\n    transitionDuration: transitionDuration,\n    isLoading: isLoading,\n    onLoadMore: onLoadMore,\n    focusedKey: // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusedKey,\n    shouldUseVirtualFocus: // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldUseVirtualFocus,\n    scrollToItem: // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    scrollToItem,\n    ...otherProps\n  } = props;\n  let fallbackRef = $kSaV5$useRef();\n  ref = ref || fallbackRef;\n  let state = $kSaV5$useVirtualizerState({\n    transitionDuration: transitionDuration,\n    layout: layout,\n    collection: collection,\n    renderView: renderView,\n    renderWrapper: renderWrapper || $6d0a5c394373ae64$var$defaultRenderWrapper,\n\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n\n  });\n  let {\n    virtualizerProps: virtualizerProps\n  } = $6d0a5c394373ae64$export$dd6d526d88b5a137(props, state, ref); // Handle scrolling, and call onLoadMore when nearing the bottom.\n\n  let onVisibleRectChange = $kSaV5$useCallback(rect => {\n    state.setVisibleRect(rect);\n\n    if (!isLoading && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n      if (rect.y > scrollOffset) onLoadMore();\n    }\n  }, [isLoading, onLoadMore, state]);\n  $kSaV5$useLayoutEffect(() => {\n    if (!isLoading && onLoadMore && !state.isAnimating) {\n      if (state.contentSize.height > 0 && state.contentSize.height <= state.virtualizer.visibleRect.height) onLoadMore();\n    }\n  }, [state.contentSize, state.isAnimating, state.virtualizer, onLoadMore, isLoading]);\n  return /*#__PURE__*/$kSaV5$react.createElement($44a6ee657928b002$export$5665e3d6be6adea, { ...$kSaV5$mergeProps(otherProps, virtualizerProps),\n    ref: ref,\n    innerStyle: state.isAnimating ? {\n      transition: `none ${state.virtualizer.transitionDuration}ms`\n    } : undefined,\n    contentSize: state.contentSize,\n    onVisibleRectChange: onVisibleRectChange,\n    onScrollStart: state.startScrolling,\n    onScrollEnd: state.endScrolling,\n    sizeToFit: sizeToFit,\n    scrollDirection: scrollDirection\n  }, state.visibleViews);\n}\n\nfunction $6d0a5c394373ae64$export$dd6d526d88b5a137(props, state, ref) {\n  let {\n    focusedKey: focusedKey,\n    scrollToItem: scrollToItem,\n    shouldUseVirtualFocus: shouldUseVirtualFocus\n  } = props;\n  let {\n    virtualizer: virtualizer\n  } = state; // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n\n  let lastFocusedKey = $kSaV5$useRef(null);\n  let isFocusWithin = $kSaV5$useRef(false);\n  $kSaV5$useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) return; // Only scroll the focusedKey into view if the modality is not pointer to avoid jumps in position when clicking/pressing tall items.\n    // Exception made if focus isn't within the virtualizer (e.g. opening a picker via click should scroll the selected item into view)\n\n    let modality = $kSaV5$getInteractionModality();\n\n    if (focusedKey !== lastFocusedKey.current && (modality !== 'pointer' || !isFocusWithin.current)) {\n      if (scrollToItem) scrollToItem(focusedKey);else virtualizer.scrollToItem(focusedKey, {\n        duration: 0\n      });\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem]);\n  let onFocus = $kSaV5$useCallback(e => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // Ignore focus events that bubble through portals (e.g. focus that happens on a menu popover child of the virtualizer)\n    // Don't scroll focused key into view if modality is pointer to prevent sudden jump in position (e.g. CardView).\n    let modality = $kSaV5$getInteractionModality();\n\n    if (!isFocusWithin.current && ref.current.contains(e.target) && modality !== 'pointer') {\n      if (scrollToItem) scrollToItem(focusedKey);else virtualizer.scrollToItem(focusedKey, {\n        duration: 0\n      });\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey, scrollToItem]);\n  let onBlur = $kSaV5$useCallback(e => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget);\n  }, [ref]); // When the focused item is scrolled out of view and is removed from the DOM,\n  // move focus to the collection view as a whole if focus was within before.\n\n  let focusedView = virtualizer.getView(focusedKey);\n  $kSaV5$useEffect(() => {\n    if (focusedKey && !focusedView && isFocusWithin.current && document.activeElement !== ref.current) $kSaV5$focusWithoutScrolling(ref.current);\n  }); // Set tabIndex to -1 if the focused view is in the DOM, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n\n  let tabIndex;\n  if (!shouldUseVirtualFocus) tabIndex = focusedView ? -1 : 0;\n  return {\n    virtualizerProps: {\n      tabIndex: tabIndex,\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n} // forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\n\n\nconst $6d0a5c394373ae64$export$89be5a243e59c4b2 = /*#__PURE__*/$kSaV5$react.forwardRef($6d0a5c394373ae64$var$Virtualizer);\n\nfunction $6d0a5c394373ae64$var$defaultRenderWrapper(parent, reusableView) {\n  return /*#__PURE__*/$kSaV5$react.createElement($ccf8a0a04e4175ae$export$6796df8ba7398521, {\n    key: reusableView.key,\n    reusableView: reusableView,\n    parent: parent\n  });\n}\n\nexport { $6d0a5c394373ae64$export$dd6d526d88b5a137 as useVirtualizer, $6d0a5c394373ae64$export$89be5a243e59c4b2 as Virtualizer, $47736c1e63ba1c6d$export$1da781778207e0a2 as useVirtualizerItem, $ccf8a0a04e4175ae$export$6796df8ba7398521 as VirtualizerItem, $ccf8a0a04e4175ae$export$1481e64fbe01b8b3 as layoutInfoToStyle, $44a6ee657928b002$export$5665e3d6be6adea as ScrollView, $ce415dc67314b753$export$faf7630257ad4304 as getRTLOffsetType, $ce415dc67314b753$export$1389d168952b34b5 as getScrollLeft, $ce415dc67314b753$export$ed5fd5ffe5ab0ac as setScrollLeft };","map":{"version":3,"mappings":"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","names":["$ce415dc67314b753$var$cachedRTLResult","$ce415dc67314b753$export$faf7630257ad4304","recalculate","outerDiv","document","createElement","outerStyle","style","width","height","overflow","direction","innerDiv","innerStyle","appendChild","body","scrollLeft","removeChild","$ce415dc67314b753$export$1389d168952b34b5","node","scrollWidth","clientWidth","$ce415dc67314b753$export$ed5fd5ffe5ab0ac","$44a6ee657928b002$var$ScrollView","props","ref","contentSize","onVisibleRectChange","children","sizeToFit","onScrollStart","onScrollEnd","scrollDirection","otherProps","defaultRef","$kSaV5$useRef","state","scrollTop","scrollEndTime","scrollTimeout","isScrolling","current","$kSaV5$useLocale","setScrolling","$kSaV5$useState","onScroll","$kSaV5$useCallback","e","target","currentTarget","$kSaV5$flushSync","Math","max","min","$kSaV5$Rect","now","Date","clearTimeout","setTimeout","$kSaV5$useEffect","updateSize","dom","w","h","clientHeight","$kSaV5$useLayoutEffect","$kSaV5$useResizeObserver","onResize","padding","overflowX","overflowY","role","pointerEvents","position","$44a6ee657928b002$export$5665e3d6be6adea","$kSaV5$react","forwardRef","$47736c1e63ba1c6d$export$1da781778207e0a2","options","reusableView","layoutInfo","virtualizer","size","$47736c1e63ba1c6d$var$getSize","updateItemSize","key","estimatedSize","$kSaV5$Size","scrollHeight","$ccf8a0a04e4175ae$export$6796df8ba7398521","className","parent","$ccf8a0a04e4175ae$export$1481e64fbe01b8b3","rendered","$ccf8a0a04e4175ae$var$cache","WeakMap","dir","xProperty","cached","get","top","rect","y","x","isSticky","allowOverflow","transition","WebkitTransition","WebkitTransitionDuration","transitionDuration","opacity","zIndex","transform","contain","set","$6d0a5c394373ae64$var$Virtualizer","renderView","renderWrapper","layout","collection","isLoading","onLoadMore","focusedKey","shouldUseVirtualFocus","scrollToItem","fallbackRef","$kSaV5$useVirtualizerState","$6d0a5c394373ae64$var$defaultRenderWrapper","virtualizerProps","$6d0a5c394373ae64$export$dd6d526d88b5a137","setVisibleRect","scrollOffset","isAnimating","visibleRect","$kSaV5$mergeProps","undefined","startScrolling","endScrolling","visibleViews","lastFocusedKey","isFocusWithin","modality","$kSaV5$getInteractionModality","duration","onFocus","contains","onBlur","relatedTarget","focusedView","getView","activeElement","$kSaV5$focusWithoutScrolling","tabIndex","$6d0a5c394373ae64$export$89be5a243e59c4b2"],"sources":["/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/virtualizer/dist/packages/@react-aria/virtualizer/src/utils.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/virtualizer/dist/packages/@react-aria/virtualizer/src/ScrollView.tsx","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/virtualizer/dist/packages/@react-aria/virtualizer/src/useVirtualizerItem.ts","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/virtualizer/dist/packages/@react-aria/virtualizer/src/VirtualizerItem.tsx","/Users/rai/Desktop/go-packing-project/node_modules/@react-aria/virtualizer/dist/packages/@react-aria/virtualizer/src/Virtualizer.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/bvaughn/react-window/blob/master/src/createGridComponent.js\n\n// According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nexport function getScrollLeft(node: HTMLElement, direction: Direction): number {\n  let {scrollLeft} = node;\n\n  // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n  if (direction === 'rtl') {\n    let {scrollWidth, clientWidth} = node;\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\n\nexport function setScrollLeft(node: HTMLElement, direction: Direction, scrollLeft: number) {\n  if (direction === 'rtl') {\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-ascending':\n        break;\n      default: {\n        const {clientWidth, scrollWidth} = node;\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n      }\n    }\n  }\n\n  node.scrollLeft = scrollLeft;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport {flushSync} from 'react-dom';\nimport {getScrollLeft} from './utils';\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {Rect, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\nimport {useResizeObserver} from '@react-aria/utils';\n\ninterface ScrollViewProps extends HTMLAttributes<HTMLElement> {\n  contentSize: Size,\n  onVisibleRectChange: (rect: Rect) => void,\n  children: ReactNode,\n  innerStyle?: CSSProperties,\n  sizeToFit?: 'width' | 'height',\n  onScrollStart?: () => void,\n  onScrollEnd?: () => void,\n  scrollDirection?: 'horizontal' | 'vertical' | 'both'\n}\n\nfunction ScrollView(props: ScrollViewProps, ref: RefObject<HTMLDivElement>) {\n  let {\n    contentSize,\n    onVisibleRectChange,\n    children,\n    innerStyle,\n    sizeToFit,\n    onScrollStart,\n    onScrollEnd,\n    scrollDirection = 'both',\n    ...otherProps\n  } = props;\n\n  let defaultRef = useRef();\n  ref = ref || defaultRef;\n  let state = useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {direction} = useLocale();\n\n  let [isScrolling, setScrolling] = useState(false);\n  let onScroll = useCallback((e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e);\n    }\n\n    flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = getScrollLeft(e.currentTarget, direction);\n\n      // Prevent rubber band scrolling from shaking when scrolling out of bounds\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n\n        if (onScrollStart) {\n          onScrollStart();\n        }\n      }\n\n      // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n      let now = Date.now();\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n\n          if (onScrollEnd) {\n            onScrollEnd();\n          }\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  }, []);\n\n  let updateSize = useCallback(() => {\n    let dom = ref.current;\n    if (!dom) {\n      return;\n    }\n\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') {\n        w = Math.min(w, contentSize.width);\n      } else if (sizeToFit === 'height') {\n        h = Math.min(h, contentSize.height);\n      }\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n\n  useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  useResizeObserver({ref, onResize: updateSize});\n\n  let style: React.CSSProperties = {\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0,\n    ...otherProps.style\n  };\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical') {\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else {\n    style.overflow = 'auto';\n  }\n\n  return (\n    <div {...otherProps} style={style} ref={ref} onScroll={onScroll}>\n      <div role=\"presentation\" style={{width: contentSize.width, height: contentSize.height, pointerEvents: isScrolling ? 'none' : 'auto', position: 'relative', ...innerStyle}}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst ScrollViewForwardRef = React.forwardRef(ScrollView);\nexport {ScrollViewForwardRef as ScrollView};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ReusableView, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface VirtualizerItemOptions<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  ref: RefObject<HTMLElement>\n}\n\nexport function useVirtualizerItem<T extends object, V>(options: VirtualizerItemOptions<T, V>) {\n  let {reusableView: {layoutInfo, virtualizer}, ref} = options;\n\n  let updateSize = useCallback(() => {\n    let size = getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n\n  return {updateSize};\n}\n\nfunction getSize(node: HTMLElement) {\n  // Reset height before measuring so we get the intrinsic size\n  let height = node.style.height;\n  node.style.height = '';\n  let size = new Size(node.scrollWidth, node.scrollHeight);\n  node.style.height = height;\n  return size;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {LayoutInfo, ReusableView} from '@react-stately/virtualizer';\nimport React, {CSSProperties, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useVirtualizerItem} from './useVirtualizerItem';\n\ninterface VirtualizerItemProps<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  parent?: ReusableView<T, V>,\n  className?: string\n}\n\nexport function VirtualizerItem<T extends object, V>(props: VirtualizerItemProps<T, V>) {\n  let {className, reusableView, parent} = props;\n  let {direction} = useLocale();\n  let ref = useRef();\n  useVirtualizerItem({\n    reusableView,\n    ref\n  });\n\n  return (\n    <div role=\"presentation\" ref={ref} className={className} style={layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo)}>\n      {reusableView.rendered}\n    </div>\n  );\n}\n\nlet cache = new WeakMap();\nexport function layoutInfoToStyle(layoutInfo: LayoutInfo, dir: Direction, parent?: LayoutInfo | null): CSSProperties {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = cache.get(layoutInfo);\n  if (cached && cached[xProperty] != null) {\n    if (!parent) {\n      return cached;\n    }\n\n    // Invalidate if the parent position changed.\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n    if (cached.top === top && cached[xProperty] === x) {\n      return cached;\n    }\n  }\n\n  let style: CSSProperties = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    overflow: layoutInfo.allowOverflow ? 'visible' : 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style'\n  };\n\n  cache.set(layoutInfo, style);\n  return style;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection} from '@react-types/shared';\nimport {focusWithoutScrolling, mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\nimport {Layout, Rect, ReusableView, useVirtualizerState, VirtualizerState} from '@react-stately/virtualizer';\nimport React, {FocusEvent, HTMLAttributes, Key, ReactElement, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {ScrollView} from './ScrollView';\nimport {VirtualizerItem} from './VirtualizerItem';\n\ninterface VirtualizerProps<T extends object, V> extends HTMLAttributes<HTMLElement> {\n  children: (type: string, content: T) => V,\n  renderWrapper?: (\n    parent: ReusableView<T, V> | null,\n    reusableView: ReusableView<T, V>,\n    children: ReusableView<T, V>[],\n    renderChildren: (views: ReusableView<T, V>[]) => ReactElement[]\n  ) => ReactElement,\n  layout: Layout<T>,\n  collection: Collection<T>,\n  focusedKey?: Key,\n  sizeToFit?: 'width' | 'height',\n  scrollDirection?: 'horizontal' | 'vertical' | 'both',\n  transitionDuration?: number,\n  isLoading?: boolean,\n  onLoadMore?: () => void,\n  shouldUseVirtualFocus?: boolean,\n  scrollToItem?: (key: Key) => void\n}\n\nfunction Virtualizer<T extends object, V>(props: VirtualizerProps<T, V>, ref: RefObject<HTMLDivElement>) {\n  let {\n    children: renderView,\n    renderWrapper,\n    layout,\n    collection,\n    sizeToFit,\n    scrollDirection,\n    transitionDuration,\n    isLoading,\n    onLoadMore,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusedKey,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldUseVirtualFocus,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    scrollToItem,\n    ...otherProps\n  } = props;\n\n  let fallbackRef = useRef<HTMLDivElement>();\n  ref = ref || fallbackRef;\n\n  let state = useVirtualizerState({\n    transitionDuration,\n    layout,\n    collection,\n    renderView,\n    renderWrapper: renderWrapper || defaultRenderWrapper,\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n  });\n\n  let {virtualizerProps} = useVirtualizer(props, state, ref);\n\n  // Handle scrolling, and call onLoadMore when nearing the bottom.\n  let onVisibleRectChange = useCallback((rect: Rect) => {\n    state.setVisibleRect(rect);\n\n    if (!isLoading && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n      if (rect.y > scrollOffset) {\n        onLoadMore();\n      }\n    }\n  }, [isLoading, onLoadMore, state]);\n\n  useLayoutEffect(() => {\n    if (!isLoading && onLoadMore && !state.isAnimating) {\n      if (state.contentSize.height > 0 && state.contentSize.height <= state.virtualizer.visibleRect.height) {\n        onLoadMore();\n      }\n    }\n  }, [state.contentSize, state.isAnimating, state.virtualizer, onLoadMore, isLoading]);\n\n  return (\n    <ScrollView\n      {...mergeProps(otherProps, virtualizerProps)}\n      ref={ref}\n      innerStyle={state.isAnimating ? {transition: `none ${state.virtualizer.transitionDuration}ms`} : undefined}\n      contentSize={state.contentSize}\n      onVisibleRectChange={onVisibleRectChange}\n      onScrollStart={state.startScrolling}\n      onScrollEnd={state.endScrolling}\n      sizeToFit={sizeToFit}\n      scrollDirection={scrollDirection}>\n      {state.visibleViews}\n    </ScrollView>\n  );\n}\n\ninterface VirtualizerOptions {\n  focusedKey?: Key,\n  scrollToItem?: (key: Key) => void,\n  shouldUseVirtualFocus?: boolean\n}\n\nexport function useVirtualizer<T extends object, V, W>(props: VirtualizerOptions, state: VirtualizerState<T, V, W>, ref: RefObject<HTMLElement>) {\n  let {focusedKey, scrollToItem, shouldUseVirtualFocus} = props;\n  let {virtualizer} = state;\n\n  // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n  let lastFocusedKey = useRef(null);\n  let isFocusWithin = useRef(false);\n  useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) {\n      return;\n    }\n\n    // Only scroll the focusedKey into view if the modality is not pointer to avoid jumps in position when clicking/pressing tall items.\n    // Exception made if focus isn't within the virtualizer (e.g. opening a picker via click should scroll the selected item into view)\n    let modality = getInteractionModality();\n    if (focusedKey !== lastFocusedKey.current && (modality !== 'pointer' || !isFocusWithin.current)) {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem]);\n\n  let onFocus = useCallback((e: FocusEvent) => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // Ignore focus events that bubble through portals (e.g. focus that happens on a menu popover child of the virtualizer)\n    // Don't scroll focused key into view if modality is pointer to prevent sudden jump in position (e.g. CardView).\n    let modality = getInteractionModality();\n    if (!isFocusWithin.current && ref.current.contains(e.target) && modality !== 'pointer') {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey, scrollToItem]);\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget as Element);\n  }, [ref]);\n\n  // When the focused item is scrolled out of view and is removed from the DOM,\n  // move focus to the collection view as a whole if focus was within before.\n  let focusedView = virtualizer.getView(focusedKey);\n  useEffect(() => {\n    if (focusedKey && !focusedView && isFocusWithin.current && document.activeElement !== ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  });\n\n  // Set tabIndex to -1 if the focused view is in the DOM, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = focusedView ? -1 : 0;\n  }\n\n  return {\n    virtualizerProps: {\n      tabIndex,\n      onFocus,\n      onBlur\n    }\n  };\n}\n\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Virtualizer = React.forwardRef(Virtualizer) as <T extends object, V>(props: VirtualizerProps<T, V> & {ref?: RefObject<HTMLDivElement>}) => ReactElement;\nexport {_Virtualizer as Virtualizer};\n\nfunction defaultRenderWrapper<T extends object, V>(\n  parent: ReusableView<T, V> | null,\n  reusableView: ReusableView<T, V>\n) {\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}