{"ast":null,"code":"var _jsxFileName = \"/Users/rai/Desktop/go-packing-project/src/components/date-range/DateRange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport calendar from \"../../assets/icons/calendar.svg\";\nimport compass from \"../../assets/icons/compass.svg\";\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./DateRange.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DateRange(props) {\n  _s();\n\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [focusedInput, setFocusedInput] = useState(null); // On each re-render, pass the start and end date up to storeDates() in Home.js via props\n\n  useEffect(() => {\n    props.storeDates(startDate, endDate);\n  }); // width: 25%;\n  // margin: 0;\n  // height: 40px;\n  // padding: 0;\n  // background-color: #ECECEC;\n  // border: none;\n  // color: #6D6D6D;\n  // padding: 12px;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DateRange\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon calendar-icon\",\n        src: calendar,\n        alt: \"calendar-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n        startDate: startDate,\n        startDateId: \"s_id\",\n        startDatePlaceholderText: \"Dates\",\n        endDatePlaceholderText: \" \",\n        endDate: endDate,\n        endDateId: \"e_id\",\n        onDatesChange: _ref => {\n          let {\n            startDate,\n            endDate\n          } = _ref;\n          setStartDate(startDate);\n          setEndDate(endDate);\n        },\n        focusedInput: focusedInput,\n        onFocusChange: e => setFocusedInput(e),\n        displayFormat: \"DD/MM/YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(DateRange, \"KwJAbA6GxPVQFGgiC7XHKdAHMCw=\");\n\n_c = DateRange;\nexport default DateRange;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateRange\");","map":{"version":3,"names":["React","useEffect","useState","calendar","compass","DateRangePicker","DateRange","props","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","storeDates","e"],"sources":["/Users/rai/Desktop/go-packing-project/src/components/date-range/DateRange.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport calendar from \"../../assets/icons/calendar.svg\";\nimport compass from \"../../assets/icons/compass.svg\";\n\nimport \"react-dates/initialize\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"./DateRange.css\";\n\nfunction DateRange(props) {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [focusedInput, setFocusedInput] = useState(null);\n\n  // On each re-render, pass the start and end date up to storeDates() in Home.js via props\n  useEffect(() => {\n    props.storeDates(startDate, endDate);\n  });\n\n  // width: 25%;\n  // margin: 0;\n  // height: 40px;\n  // padding: 0;\n  // background-color: #ECECEC;\n  // border: none;\n  // color: #6D6D6D;\n  // padding: 12px;\n  return (\n    <>\n      <div className=\"DateRange\">\n        <img\n          className=\"icon calendar-icon\"\n          src={calendar}\n          alt=\"calendar-icon\"\n        />\n\n        <DateRangePicker\n          startDate={startDate}\n          startDateId=\"s_id\"\n          startDatePlaceholderText=\"Dates\"\n          endDatePlaceholderText=\" \"\n          endDate={endDate}\n          endDateId=\"e_id\"\n          onDatesChange={({ startDate, endDate }) => {\n            setStartDate(startDate);\n            setEndDate(endDate);\n          }}\n          focusedInput={focusedInput}\n          onFocusChange={(e) => setFocusedInput(e)}\n          displayFormat=\"DD/MM/YYYY\"\n\n        />\n      </div>\n    </>\n  );\n}\n\nexport default DateRange;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAEA,OAAO,wBAAP;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAO,qCAAP;AACA,OAAO,iBAAP;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACxB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD,CAHwB,CAKxB;;EACAD,SAAS,CAAC,MAAM;IACdM,KAAK,CAACO,UAAN,CAAiBN,SAAjB,EAA4BE,OAA5B;EACD,CAFQ,CAAT,CANwB,CAUxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QACE,SAAS,EAAC,oBADZ;QAEE,GAAG,EAAEP,QAFP;QAGE,GAAG,EAAC;MAHN;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,eAAD;QACE,SAAS,EAAEK,SADb;QAEE,WAAW,EAAC,MAFd;QAGE,wBAAwB,EAAC,OAH3B;QAIE,sBAAsB,EAAC,GAJzB;QAKE,OAAO,EAAEE,OALX;QAME,SAAS,EAAC,MANZ;QAOE,aAAa,EAAE,QAA4B;UAAA,IAA3B;YAAEF,SAAF;YAAaE;UAAb,CAA2B;UACzCD,YAAY,CAACD,SAAD,CAAZ;UACAG,UAAU,CAACD,OAAD,CAAV;QACD,CAVH;QAWE,YAAY,EAAEE,YAXhB;QAYE,aAAa,EAAGG,CAAD,IAAOF,eAAe,CAACE,CAAD,CAZvC;QAaE,aAAa,EAAC;MAbhB;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA4BD;;GA9CQT,S;;KAAAA,S;AAgDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}